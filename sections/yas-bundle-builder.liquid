<style>

.featured-bundle-builder {
  max-width: {% if section.settings.section_width == 'full' %}100%{% else %}{{ settings.page_width }}px{% endif %};
  margin: 0 auto;
}

{% if section.settings.font_variant == 'custom' %}
  {%- liquid
      assign body_font_bold = section.settings.title_font | font_modify: 'weight', 'bold'
      assign body_font_italic = section.settings.title_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}
  {{ section.settings.title_font | font_face: font_display: 'swap' }}
  {{ body_font_bold | font_face: font_display: 'swap' }}
  {{ body_font_italic | font_face: font_display: 'swap' }}
  {{ body_font_bold_italic | font_face: font_display: 'swap' }}
  {{ settings.type_header_font | font_face: font_display: 'swap' }}
  #shopify-section-{{section.id}} * {
    font-family: {{ section.settings.title_font.family }};
  }
{% endif %}

#shopify-section-{{ section.id }} {
  background-color: {{ section.settings.background_color }};
  color: {{ section.settings.text_color }};
  padding: {{ section.settings.padding_tb_desk }}px {{ section.settings.padding_lr_desk }}px;
  display: {% case section.settings.display_on %}
             {% when 'all' %}block;
             {% when 'mobile_only' %}none;
             {% when 'desktop_only' %}block;
           {% endcase %};
}

#shopify-section-{{ section.id }} .heading {
  {% if section.settings.section_width == 'full' %}
    margin: 0 10%;
  {% endif %}
  margin-bottom: 50px;
}

#shopify-section-{{ section.id }} .content-wrapper {
  height: 100%;
  margin: 0 auto;
  max-width: {{ settings.page_width }}px;
  display: block;
  position: relative;
  padding: 20px 0;
}

#shopify-section-{{ section.id }} .title * {
  margin: 0;
}

#shopify-section-{{ section.id }} .title h2,
#shopify-section-{{ section.id }} .title h1,
#shopify-section-{{ section.id }} .title h3,
#shopify-section-{{ section.id }} .title p {
  font-size: {% case section.settings.heading_size %}
               {% when 'small' %}36px
               {% when 'medium' %}45px
               {% when 'large' %}60px
             {% endcase %};
  text-transform: {{ section.settings.headline_typography }};
  color: {{ section.settings.text_color }};
  margin: 0;
  text-align: {% case section.settings.heading_align %}
                 {% when 'left' %}left;
                 {% when 'center' %}center;
                 {% when 'right' %}right;
               {% endcase %};
  line-height: 110%;
  font-weight: 700;
  margin-bottom: 16px;
}

#shopify-section-{{ section.id }} .subtitle * {
  margin: 0;
}

#shopify-section-{{ section.id }} .subtitle h2,
#shopify-section-{{ section.id }} .subtitle h3,
#shopify-section-{{ section.id }} .subtitle p {
  color: {{ section.settings.subtitle_color }};
  font-size: 20px;
  font-weight: 400;
  text-align: {% case section.settings.heading_align %}
                 {% when 'left' %}left;
                 {% when 'center' %}center;
                 {% when 'right' %}right;
               {% endcase %};
  line-height: 150%;
  margin: 0;
  margin-bottom: 20px;
}

#shopify-section-{{ section.id }} .uppertitle * {
  margin: 0;
}

#shopify-section-{{ section.id }} .uppertitle {
  display: flex;
  justify-content: {% case section.settings.heading_align %}
                     {% when 'left' %}left;
                     {% when 'center' %}center;
                     {% when 'right' %}right;
                   {% endcase %};
  align-items: center;
  margin: 0;
  margin-bottom: 14.5px;
}

#shopify-section-{{ section.id }} .uppertitle svg {
  margin-bottom: 2px;
}

#shopify-section-{{ section.id }} .uppertitle h2,
#shopify-section-{{ section.id }} .uppertitle h3,
#shopify-section-{{ section.id }} .uppertitle p {
  color: {{ section.settings.uppertitle_color }};
  font-size: 15px;
  font-weight: 400;
  order: 5;
  line-height: 150%;
  margin-left: 11px;
}

#shopify-section-{{ section.id }}.product-item {
  border-radius: {{ section.settings.container_radius }}px;
  background-color: {{ section.settings.card_background }};
  box-shadow: {% if section.settings.container_styling == 'shadow' %}
               {{ section.settings.box_shadow_offset }}px {{ section.settings.box_shadow_offset }}px {{ section.settings.box_shadow_blur }}px {{ section.settings.box_shadow_spread }}px {{ section.settings.box_shadow_color }};
             {% else %}none;
             {% endif %};
  border: {% if section.settings.container_styling == 'card' %}
            {{ section.settings.card_border }}px solid {{ section.settings.card_border_color }};
          {% else %}none;
          {% endif %};
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

#shopify-section-{{ section.id }} .product-info {
  padding: {{ section.settings.card_padding }}px;
  display: flex;
  flex-direction: column;
}

#shopify-section-{{ section.id }} .product-title {
  text-transform: {{ section.settings.card_title_typography }};
  {% if section.settings.card_title_line %}
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  {% else %}
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  {% endif %};
  text-align: left;
}

#shopify-section-{{ section.id }} .btn {
  border-radius: {{ section.settings.btn_radius }}px;
  color: {% if section.settings.btn_color != 'transparent' %}{{section.settings.btn_color}}{% else %}var(--color-text-btn){% endif %};
  background: {% if section.settings.btn_bg != 'transparent' %}{{section.settings.btn_bg}}{% else %}var(--color-bg-btn){% endif %};
}
  #shopify-section-{{ section.id }} .btn svg path {
   fill: {% if section.settings.btn_color != 'transparent' %}{{section.settings.btn_color}}{% else %}var(--color-text-btn){% endif %};
  }
#shopify-section-{{ section.id }} .bundle-qty-control {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 40px;
  font-size: 14px;
  font-weight: 700;
  width: 100%;
  border: 1px solid #000;
  border-radius: {{ section.settings.btn_radius }}px;
  background-color: #fff;
  padding: 0 12px;
  box-sizing: border-box;
}

@media (max-width: 768px) {
  #shopify-section-{{ section.id }} {
    padding: {{ section.settings.padding_tb_mob }}px {{ section.settings.padding_lr_mob }}px;
    display: {% case section.settings.display_on %}
               {% when 'all' %}block;
               {% when 'mobile_only' %}block;
               {% when 'desktop_only' %}none;
             {% endcase %};
  }

#shopify-section-{{ section.id }}  .products-grid {
    grid-template-columns: repeat({{ section.settings.column_prod_mob | default: 2 }}, 1fr);
  }
}

</style>

<section class="featured-bundle-builder">
  <div class="content-wrapper">
  {%- if section.settings.uppertitle != blank or section.settings.subtitle or section.settings.title != blank  -%}
      <div class="heading">
        {% if section.settings.uppertitle != blank %}
      <div class="uppertitle">{{ section.settings.uppertitle }} {% for i in (1..5) %}{% render 'star_comparison' %}{% endfor %}</div>
    {% endif %}
        <div class="title">
          {%- if section.settings.title != blank -%}
            {{ section.settings.title }}
          {%- endif -%}
        </div>
        <div class="subtitle">
          {%- if section.settings.subtitle != blank -%}
            {{ section.settings.subtitle }}
          {%- endif -%}
        </div>
        
      </div>
    {%- endif -%}
  <div class="bundle-layout">
    <div class="products-grid">
      {% for block in section.blocks %}
  {% assign product = block.settings.product %}



      
{% if product != blank %}
<div class="product-item"
     data-id="{{ product.variants.first.id }}"
     data-title="{{ product.title }}"
   data-price="{{ product.price }}"

    {% if section.settings.card_clickable == true %} data-url="{{ product.url }}"{% endif %}>


    
    <div class="product-image-wrapper {% if section.settings.secondary_image_highlight and product.images[1] %}has_second-img{% endif %}">
      <img class="primary-image" src="{{ product.featured_image | img_url: '600x' }}" alt="{{ product.title }}">
      {% if section.settings.secondary_image_highlight and product.images[1] %}
        <img class="secondary-image" src="{{ product.images[1] | img_url: '600x' }}" alt="Secondary image">
      {% endif %}
    </div>
    <div class="product-info">
      {% if section.settings.show_reviews %}
        <div class="product-reviews">
          <span>{% for i in (1..block.settings.star_count) %}{% render 'review-stars' %}{% endfor %}</span>
          {{ block.settings.review_text }}
        </div>
      {% endif %}
 
      <h3 class="product-title">{{ product.title }}</h3>
       
      <span class="description">  {{ product.description | truncate: 55 | strip_html}}</span>
      
      {% if section.settings.show_price %}
      <p class="price">
        {% if product.compare_at_price > product.price %}
          <span class="product-compare-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
        <span class="product-price">{{ product.price | money }}</span>
      </p>
     {% endif %}
  
  
  <div
  class="add-to-bundle-wrapper"
  data-button-html='
    <button class="btn add-to-bundle">
      {{ section.settings.text_btn_card }}
      {% if section.settings.show_arrow == true %}
        {% render "icon_arrow_submit2" %}
      {% endif %}
    </button>
  '>
  <button class="btn add-to-bundle">
    {{ section.settings.text_btn_card }}
    {% if section.settings.show_arrow == true %}
      {% render "icon_arrow_submit2" %}
    {% endif %}
  </button>
     
</div>


    </div>
</div>
{% endif %}
      {% endfor %}
    </div>
<span id="money-format-template" style="display:none;">
  {{ 1234 | money }}
</span>
<span id="currency-symbol" style="display:none;">
  {{ cart.currency.symbol }}
</span>

<div id="bundle-summary" class="bundle-summary">
  <div class="bundle-header">
    <h2>Your Bundle</h2>
    <p class="bundle-subtitle">Lorem Ipsum Dolor Sit Amet, Consectetu</p>
    <div class="bundle-pricing-line">
      <span class="bundle-old-price" id="bundle-old-price"></span>
      <span class="bundle-current-price" id="bundle-current-price"></span>
      <span class="bundle-save" id="bundle-save-amount"></span>
    </div>
  </div>

  <div class="bundle-product-block">
    <div class="bundle-title-line">
      <strong>Lorem Ipsum Dolor</strong>
    
    </div>

    <ul id="bundle-list" class="bundle-list">
     
    </ul>
  </div>

  <div class="bundle-total" id="bundle-pricing">
  
  </div>

  <button class="bundle-checkout-btn" id="checkout-bundle" disabled>
    GET YOUR BUNDLE NOW →
  </button>
    <div class="payment-methods">
        <div class="payment-secure">
            {% render 'icon-secure-prod' %}
            <div class="payment-secure-text">
                <p><strong>100% Secure Checkout</strong></p>
                <p>Guaranteed Secure</p>
            </div>
        </div>
        {% if section.settings.show_payment_icons %}
          <ul class="payment-icons-list">
            {% if section.settings.show_shopify_pay %}<li>{% render 'icon-shopify-pay' %}</li>{% endif %}
            {% if section.settings.discover %}<li>{% render 'icon-discover' %}</li>{% endif %}
            {% if section.settings.show_visa %}<li>{% render 'icon-visa' %}</li>{% endif %}
            {% if section.settings.show_mastercard %}<li>{% render 'icon-mastercard' %}</li>{% endif %}
            {% if section.settings.show_apple_pay %}<li>{% render 'icon-apple-pay' %}</li>{% endif %}
            {% if section.settings.show_google_pay %}<li>{% render 'icon-google-pay' %}</li>{% endif %}
            {% if section.settings.show_paypal %}<li>{% render 'icon-amazon' %}</li>{% endif %}
            {% if section.settings.show_amex %}<li>{% render 'icon-amex' %}</li>{% endif %}      
          </ul>
        {% endif %}
    </div>
</div>
 
  </div>
  </div>
</section>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const bundleItems = {}; // key = id, value = { id, title, price, image, quantity }
    const requiredCount = {{ section.settings.min_products | default: 3 }};
    const discountCode = "{{ section.settings.discount_code }}";

    const bundleList = document.getElementById("bundle-list");
    const bundlePricing = document.getElementById("bundle-pricing");
    const oldPriceEl = document.getElementById("bundle-old-price");
    const currentPriceEl = document.getElementById("bundle-current-price");
    const saveEl = document.getElementById("bundle-save-amount");
    const checkoutBtn = document.getElementById("checkout-bundle");

    function formatMoney(amount) {
      const template = document.getElementById("money-format-template")?.innerText || "£12.34";
      const decimalAmount = (amount).toFixed(2);
      return template.replace(/12\.34/, decimalAmount);
    }

  
    document.addEventListener("click", function (e) {
      const addBtn = e.target.closest(".add-to-bundle");
      const plusBtn = e.target.closest(".bundle-qty-plus");
      const minusBtn = e.target.closest(".bundle-qty-minus");

     
      if (addBtn) {
        const card = addBtn.closest(".product-item");
        const id = card.dataset.id;
        const title = card.dataset.title;
        const price = parseFloat(card.dataset.price) / 100;
        const image = card.querySelector('.primary-image')?.src || '';

        bundleItems[id] = { id, title, price, image, quantity: 1 };
        updateBundleUI();
        updateProductCard(id);
      }

     
      if (plusBtn) {
        const id = plusBtn.closest(".bundle-qty-control").dataset.id;
        if (bundleItems[id]) {
          bundleItems[id].quantity += 1;
          updateBundleUI();
          updateProductCard(id);
        }
      }

    
      if (minusBtn) {
        const id = minusBtn.closest(".bundle-qty-control").dataset.id;
        if (bundleItems[id]) {
          bundleItems[id].quantity -= 1;
          if (bundleItems[id].quantity <= 0) {
            delete bundleItems[id];
          }
          updateBundleUI();
          updateProductCard(id);
        }
      }

    
      if (e.target.closest("#bundle-list li button")) {
        const id = e.target.closest("li").dataset.id;
        delete bundleItems[id];
        updateBundleUI();
        updateProductCard(id);
      }
    });

 function updateProductCard(id) {
  const card = document.querySelector(`.product-item[data-id="${id}"]`);
  if (!card) return;

  const btnWrapper = card.querySelector(".add-to-bundle-wrapper");
  if (!btnWrapper) return;

  btnWrapper.innerHTML = ""; 

  if (bundleItems[id]) {

    btnWrapper.innerHTML = `
      <div class="bundle-qty-control" data-id="${id}">
        <button class="bundle-qty-minus">−</button>
        <span class="bundle-qty-number">${bundleItems[id].quantity}</span>
        <button class="bundle-qty-plus">+</button>
      </div>
    `;
  } else {
  
    btnWrapper.innerHTML = `
      <button class="btn add-to-bundle">Add to Bundle</button>
    `;
  }
}


    function updateBundleUI() {
      bundleList.innerHTML = "";
      let total = 0;
      let totalItems = 0;

      Object.values(bundleItems).forEach(item => {
        total += item.price * item.quantity;
        totalItems += item.quantity;

        bundleList.innerHTML += `
          <li data-id="${item.id}">
            <img src="${item.image}" alt="${item.title}">
            <div class="title">${item.title} ×${item.quantity}</div>
            <div class="delete">Delete
            <button title="Remove">X</button></div>
          </li>
        `;
      });

      const discount = totalItems >= requiredCount ? 15 : 0;
      const final = Math.max(0, total - discount);

      oldPriceEl.innerHTML = totalItems >= requiredCount ? `For: <del>${formatMoney(total)}</del>` : "";
      currentPriceEl.textContent = formatMoney(final);
      saveEl.textContent = totalItems >= requiredCount ? `Save ${formatMoney(discount)}` : "";

      bundlePricing.textContent = `Total: ${formatMoney(final)}`;
      checkoutBtn.disabled = totalItems < requiredCount;
    }

checkoutBtn.addEventListener("click", async () => {
  const originalText = checkoutBtn.innerText;
  checkoutBtn.disabled = true;
  checkoutBtn.innerText = "Adding...";

  const items = Object.values(bundleItems);

  for (let i = 0; i < items.length; i++) {
    const item = items[i];
    await fetch("/cart/add.js", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        id: item.id,
        quantity: item.quantity
      })
    });

    await new Promise(resolve => setTimeout(resolve, 300));
  }


  checkoutBtn.disabled = false;
  checkoutBtn.innerText = originalText;

  
  window.location.href = `/cart?discount=${discountCode}`;
});


  });
</script>


{% schema %}
{
  "name": "Bundle Builder Section",
  "settings": [
    {
      "type": "header",
      "content": "Content Settings"
    },
    {
      "type": "richtext",
      "id": "uppertitle",
      "label": "Uppertitle",
      "default": "<h3>Reviewed by +100 Happy Customers</h3>"
    },
     {
      "type": "richtext",
      "id": "title",
      "label": "Title",
      "default": "<h2>Value Proposition featuring benifit</h2>"
    },

    {
      "type": "richtext",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "<h3>Ut enim ad minima veniam, quis nostrum exercitati onem ullam corporis suscipit laboriosam, commodi </h3>"
    },
     { "type": "select", "id": "heading_align", "label": "Heading Alignment", "options": [{ "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" }], "default": "center" },
    { "type": "text", "id": "discount_code", "label": "Discount code to apply", "default": "BUNDLE15" },
    { "type": "range", "id": "min_products", "label": "Minimum products to activate bundle", "min": 1, "max": 10, "step": 1, "default": 3 },

    { "type": "header", "content": "Card Settings" },
    { "type": "checkbox", "id": "show_reviews", "label": "Show Review Stars", "default": true },
      { "type": "checkbox", "id": "show_price", "label": "Show Price", "default": true },
    { "type": "checkbox", "id": "card_clickable", "label": "Card clickable", "default": false },
    { "type": "range", "id": "card_padding", "label": "Padding card info", "min": 0, "max": 25, "step": 1, "default": 10 },
    { "type": "select", "id": "card_title_typography", "label": "Card title Typography", "options": [
      { "value": "uppercase", "label": "AA" },
      { "value": "capitalize", "label": "Aa" },
      { "value": "lowercase", "label": "aa" }

    ], "default": "capitalize" },
    
    { "type": "checkbox", "id": "card_title_line", "label": "Card title two line", "default": true },
    { "type": "checkbox", "id": "secondary_image_highlight", "label": "Secondary Image On Hover", "default": false },

    { "type": "select", "id": "container_styling", "label": "Container Styling", "options": [
      { "value": "no_card", "label": "No Card" },
      { "value": "card", "label": "Card" },
      { "value": "shadow", "label": "Shadow" }
    ], "default": "card" },
    { "type": "range", "id": "box_shadow_offset", "label": "Box shadow offset", "min": -10, "max": 10, "default": 1 },
    { "type": "range", "id": "box_shadow_blur", "label": "Box shadow blur", "min": 0, "max": 15, "default": 1 },
    { "type": "range", "id": "box_shadow_spread", "label": "Box shadow spread", "min": 0, "max": 15, "default": 1 },
    { "type": "color", "id": "box_shadow_color", "label": "Box shadow color", "default": "#000000" },
    { "type": "range", "id": "card_border", "label": "Card border", "min": 0, "max": 5, "step": 1, "default": 0 },
    { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#000000" },
    { "type": "range", "id": "container_radius", "label": "Container Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 },
    { "type": "color", "id": "card_background", "label": "Card background", "default": "transparent" },

    { "type": "header", "content": "Layout & Fonts" },
    { "type": "color", "id": "background_color", "label": "Background color", "default": "transparent" },
    { "type": "color", "id": "text_color", "label": "Text color", "default": "#000000" },
    { "type": "color", "id": "subtitle_color", "label": "Subtitle color", "default": "#000000" },
    { "type": "select", "id": "heading_size", "label": "Heading Size", "options": [
      { "value": "small", "label": "Small" },
      { "value": "medium", "label": "Medium" },
      { "value": "large", "label": "Large" }
    ], "default": "medium" },
    { "type": "select", "id": "headline_typography", "label": "Headline Typography", "options": [
      { "value": "uppercase", "label": "AA" },
      { "value": "capitalize", "label": "Aa" },
      { "value": "lowercase", "label": "aa" }
    ], "default": "capitalize" },
    { "type": "select", "id": "font_variant", "label": "Font Family", "options": [
      { "value": "default", "label": "Default by theme" },
      { "value": "custom", "label": "Own choice" }
    ], "default": "default" },
    { "type": "font_picker", "label": "Regular Font", "id": "title_font", "default": "montserrat_n4" },

    { "type": "header", "content": "Responsive & Padding" },
    { "type": "select", "id": "display_on", "label": "Display On", "options": [
      { "value": "all", "label": "All Devices" },
      { "value": "mobile_only", "label": "Mobile Only" },
      { "value": "desktop_only", "label": "Desktop Only" }
    ], "default": "all" },
    { "type": "range", "id": "padding_lr_desk", "label": "Horizontal Padding (Desktop)", "min": 0, "max": 100, "step": 5, "default": 20 },
    { "type": "range", "id": "padding_tb_desk", "label": "Vertical Padding (Desktop)", "min": 0, "max": 100, "default": 20 },
    { "type": "range", "id": "padding_lr_mob", "label": "Horizontal Padding (Mobile)", "min": 0, "max": 100, "step": 5, "default": 20 },
    { "type": "range", "id": "padding_tb_mob", "label": "Vertical Padding (Mobile)", "min": 0, "max": 100, "default": 20 },
   
{
  "type": "checkbox",
  "id": "show_arrow",
  "label": "Show arrow Button",
  "default": true
},
{
  "type": "text",
  "id": "text_btn_card",
  "label": "Text For Card Buttons",
  "default": "Add to Bundle"
},
    {
  "type": "range",
  "id": "btn_radius",
  "label": "Button Radius",
       "min": 0, "max": 100, "step": 1,
  "default": 40
}, 
       { "type": "color", "id": "btn_bg", "label": "Button Background Color", "default": "#000" },
      { "type": "color", "id": "btn_color", "label": "Button Text Color", "default": "#fff" },
    
    
    { "type": "header", "content": "Payment Icons" },
        {
      "type": "checkbox",
      "id": "show_payment_icons",
      "label": "Show payment icons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_visa",
      "label": "Show Visa",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_mastercard",
      "label": "Show Mastercard",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_amex",
      "label": "Show Amex",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_paypal",
      "label": "Show PayPal",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_shopify_pay",
      "label": "Show Shopify Pay",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_google_pay",
      "label": "Show Google Pay",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_apple_pay",
      "label": "Show Apple Pay",
      "default": true
    },
    
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        { "type": "product", "id": "product", "label": "Select Product" },
        { "type": "range", "id": "star_count", "label": "Star count", "min": 1, "max": 5, "step": 1, "default": 5 },
        { "type": "text", "id": "review_text", "label": "Review text", "default": "10 reviews" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Bundle Builder",
      "category": "Product",
      "blocks": [
        { "type": "product" },
        { "type": "product" },
        { "type": "product" }
      ]
    }
  ]
}
{% endschema %}
