<style>
 
  {% if section.settings.font_variant == 'custom' %}
    {%- liquid
      assign body_font_bold = section.settings.title_font | font_modify: 'weight', 'bold'
      assign body_font_italic = section.settings.title_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}
    {{ section.settings.title_font | font_face: font_display: 'swap' }}
    {{ body_font_bold | font_face: font_display: 'swap' }}
    {{ body_font_italic | font_face: font_display: 'swap' }}
    {{ body_font_bold_italic | font_face: font_display: 'swap' }}
    {{ settings.type_header_font | font_face: font_display: 'swap' }}
    #shopify-section-{{section.id}} * {
      font-family: {{ section.settings.title_font.family }};
    }
  {% endif %}

  #shopify-section-{{section.id}} .content-wrapper a p {
    margin: 0 auto;
    color: {{ section.settings.text_color }};
    cursor: pointer;
  }

  #shopify-section-{{section.id}} {
    display: {% case section.settings.display_on %}
              {% when 'all' %} block;
              {% when 'mobile_only' %} none;
              {% when 'desktop_only' %} block;
            {% endcase %};
    padding: {{ section.settings.padding_y_desk }}px {{ section.settings.padding_x_desk }}px;
    background-color: {{ section.settings.background_color }};
    text-align: {{ section.settings.heading_align }};
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    height: auto;
    width: 100%;
    text-decoration: none;
  }

  #shopify-section-{{section.id}} .heading {
    {% if section.settings.section_width == 'full' %}
      margin: 0 10%;
    {% endif %}
  }

  #shopify-section-{{section.id}} .content-wrapper {
    height: 100%;
    margin: 0 auto;
    max-width: {{ settings.page_width }}px;
    display: block;
    position: relative;
    text-align: {{ section.settings.heading_align }};
    padding: 20px 0;
  }

  #shopify-section-{{section.id}} .title * {
    margin: 0;
  }

  #shopify-section-{{section.id}} .title h2, 
  #shopify-section-{{section.id}} .title h1, 
  #shopify-section-{{section.id}} .title h3, 
  #shopify-section-{{section.id}} .title p {
    font-size: {% case section.settings.heading_size %}
                 {% when 'small' %}36px
                 {% when 'medium' %}45px
                 {% when 'large' %}60px
               {% endcase %};
    text-transform: {{ section.settings.headline_typography }};
    color: {{ section.settings.text_color }};
    margin: 0; 
    text-align: {% case section.settings.heading_align %}
                  {% when 'left' %}left;
                  {% when 'center' %}center;
                  {% when 'right' %}right;
                {% endcase %};
    line-height: 110%;
    font-weight: 700;
    margin-bottom: 16px;
  }

  #shopify-section-{{section.id}} .subtitle * {
    margin: 0;
  }

  #shopify-section-{{section.id}} .subtitle h2, 
  #shopify-section-{{section.id}} .subtitle h3, 
  #shopify-section-{{section.id}} .subtitle p {
  color: {{ section.settings.text_color }};
    font-size: 20px;
    font-weight: 400;
    text-align: {% case section.settings.heading_align %}
                  {% when 'left' %} left;
                  {% when 'center' %} center;
                  {% when 'right' %} right;
                {% endcase %};
    line-height: 150%;
    margin: 0;
    margin-bottom: 20px;
  }

  #shopify-section-{{section.id}} .uppertitle * {
    margin: 0;
  }

  #shopify-section-{{section.id}} .uppertitle {
    display: flex;
    justify-content: {% case section.settings.heading_align %}
                      {% when 'left' %} left;
                      {% when 'center' %} center;
                      {% when 'right' %} right;
                    {% endcase %};
    align-items: center;
    margin: 0;
    margin-bottom: 14.5px;
  }

  #shopify-section-{{section.id}} .uppertitle svg {
    margin-bottom: 5px;
    margin-left: 5px;
  }

  #shopify-section-{{section.id}} .uppertitle h2, 
  #shopify-section-{{section.id}} .uppertitle h3, 
  #shopify-section-{{section.id}} .uppertitle p {
   color: {{ section.settings.text_color }};
    font-size: 15px;
    font-weight: 400;
    line-height: 150%;
    order: 5;
    margin-left: 11px;
  }
  

 #shopify-section-{{section.id}} .price-block
{
  display: flex;
  align-content: center;
  align-items:center;
  margin-bottom: 0px;
  margin-top: 0;
  
}
 #shopify-section-{{section.id}} .instock
{
  font-size: 14px;
  line-height: 150%;
  font-weight: 400;
  display: flex;

}
 #shopify-section-{{section.id}} .cprice
{
font-weight: 400;
font-size: 22px;
line-height: 100%;
letter-spacing: 0%;
text-transform: capitalize;
text-decoration: line-through;
  margin-right: 15px;
}
 #shopify-section-{{section.id}} .priced
{
font-weight: 700;
font-size: 16px;
line-height:150%;
background: black;
border-radius: 50px;
  padding: 6px 14px;
  gap: 10px; 
  color: white;
  max-height: 36px;
  margin: 0px 30px;
}

 #shopify-section-{{section.id}} .price {
  font-size: 24px;
  font-weight: bold;
  color: #000;
}
#shopify-section-{{section.id}} .description-block
{
  font-size: 20px;
    line-height: 150%;
    color: #000;
    margin-bottom: 0;
    margin-top: 0;
  text-align: left;
}


 
 
  #shopify-section-{{section.id}} .product-points-content p {
    font-size: 20px;
    font-weight: 400;
    margin: 0 0 32px;
    line-height: 150%;
    color: inherit;
  }
  #shopify-section-{{section.id}} .product-points-content .product-points-list{
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }
  #shopify-section-{{section.id}} .product-points-content .product-points-list li {
    font-size: 16px;
    color: {{ section.settings.text_color_list }};
    margin: 0px;
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
    line-height: 150%;
  }
  #shopify-section-{{section.id}} .product-points-content .product-points-list img {
    width: 24px;
    height: 24px;
  }


/* Styles for safety icons section */


 #shopify-section-{{section.id}}   .icon-wrapper {
  width: 60px;
  height: 60px;
  background-color: #e0e0e0; /* Gray background for icon */
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 10px;
}

 #shopify-section-{{section.id}}   .icon-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 50%;
}

 #shopify-section-{{section.id}}   .icon-wrapper .material-icons {
  font-size: 30px;
  color: #000;
}

 #shopify-section-{{section.id}}   .icon-wrapper span {
  font-size: 30px;
  color: #000;
}

 #shopify-section-{{section.id}}   .icon-text p {
  margin: 0;
}
   



/* Styles for unlock gifts section */
 #shopify-section-{{section.id}}  .unlock-gifts-section {
  width: 100%;
}

 #shopify-section-{{section.id}}  .unlock-gifts-section h3 {
  font-size: 1.2em;
  margin-bottom: 10px;
  font-weight: bold;
  margin-top: 0;
}
 #shopify-section-{{section.id}}  .product-addon-section h3 {
  font-size: 1.2em;
  margin-bottom: 10px;
  font-weight: bold;
  margin-top: 0;
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gifts {
  display: flex;
  gap: 10px;
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift {
  flex: 1;
  text-align: center; 
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift.locked {

}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-image {
  width: 100%;
  aspect-ratio: 1 / 1;
  border: 1px solid #ddd;
  border-radius: 8px;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
}
 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-image svg{
  width: 60%;
}
 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-image .lock-icon {
  font-size: 40px;
  color: #666;
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-image .placeholder-image {
  width: 100%;
  height: 100%;
  background-color: #d3d3d3; /* Gray placeholder */
}

 #shopify-section-{{section.id}}  .unlock-gifts-section .gift-title {
  font-size: 14px;
  font-weight: bold;
  color: #333;
  margin-top: 20px;
}




 #shopify-section-{{section.id}} .product-sizechart-content  .product-points-list{
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }
 #shopify-section-{{section.id}} .product-sizechart-content   .product-points-list li {
    font-size: 16px;
    color: {{ section.settings.text_color_list }};
    margin: 0px;
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
    line-height: 150%;
  }
 #shopify-section-{{section.id}} .product-sizechart-content  .product-points-list img {
    width: 24px;
    height: 24px;
  }


 #shopify-section-{{section.id}} .payment-secure-text p
{
  color: #000;
  text-align:left;
}








  
  @media (min-width: 769px) and (max-width: 1279px){

  #shopify-section-{{section.id}}    .product-points-content{
      max-width: 50%;
    }
     #shopify-section-{{section.id}} .product-sizechart-content    .product-points-container{
      gap: 25px;
    }
  #shopify-section-{{section.id}}   .product-sizechart-content    .product-points-content{
      max-width: 50%;
    }
  }

  @media (max-width: 768px) {
    #shopify-section-{{section.id}} {
      display: {% case section.settings.display_on %}
                {% when 'all' %} block;
                {% when 'mobile_only' %} block;
                {% when 'desktop_only' %} none;
              {% endcase %};
      padding: {{ section.settings.padding_y_mob }}px {{ section.settings.padding_x_mob }}px;
    }

    #shopify-section-{{section.id}} .heading {
      margin: 0;
      padding: 0;
    }

    #shopify-section-{{section.id}} .content-wrapper {
      max-width: 100%;
    }

    #shopify-section-{{section.id}} .title h2, 
    #shopify-section-{{section.id}} .title h1, 
    #shopify-section-{{section.id}} .title h3, 
    #shopify-section-{{section.id}} .title p {
      font-size: {% case section.settings.heading_size %}
                   {% when 'small' %}20px
                   {% when 'medium' %}28px
                   {% when 'large' %}36px
                 {% endcase %};
      line-height: 100%;
      margin: 0;
      margin-bottom: 16px;
    }

    #shopify-section-{{section.id}} .subtitle h2, 
    #shopify-section-{{section.id}} .subtitle h3, 
    #shopify-section-{{section.id}} .subtitle p {
      font-size: 16px;
      line-height: 24px;
    }

    #shopify-section-{{section.id}} .uppertitle h2, 
    #shopify-section-{{section.id}} .uppertitle h3, 
    #shopify-section-{{section.id}} .uppertitle p {
      color: {{ section.settings.uppertitle_color }};
      font-size: 12px;
      line-height: 16px;
      font-weight: 400;
      order: 5;
      margin-left: 3px;
    }

    #shopify-section-{{section.id}} .uppertitle {
      margin-bottom: 16px;
    }

    #shopify-section-{{section.id}} .uppertitle svg {
      max-width: 12px;
      margin-left: 0px;
      margin-bottom: 3px;
    }

 #shopify-section-{{section.id}}    .content-wrapper {
      padding: 10px;
    }
      .price-block{
    gap: 10px;
    flex-wrap: wrap;
  }
 #shopify-section-{{section.id}}  .priced{
    margin: 0;
  }
    
  #shopify-section-{{section.id}} .product-points-content h2 {
      font-size: 28px;
      margin: 0 0 24px;
    }
 
  #shopify-section-{{section.id}} .product-points-content p{
      margin: 0 0 24px;
      font-weight: 500;
      font-size: 16px;
    }
   #shopify-section-{{section.id}}    .product-points-content .product-points-list{
      gao: 9px;
    }
  #shopify-section-{{section.id}}     .product-points-content  .product-points-list li{
      margin-bottom: 0px;
      font-size: 14px;
    }
   
 #shopify-section-{{section.id}}   .unlock-gifts-section .gifts {
    flex-direction: row;
  }

 #shopify-section-{{section.id}}   .unlock-gifts-section .gift {
    width: calc(100% / 3);
  }

 #shopify-section-{{section.id}} .lab-tested-section:after {
    content: '';
    height: 7px;
    top: 24px;
    width: 70%;
  
  }
 #shopify-section-{{section.id}} .product-sizechart-content .product-points-content h2 {
      font-size: 28px;
      margin: 0 0 24px;
    }
 
 #shopify-section-{{section.id}} .product-sizechart-content .product-points-content p{
      margin: 0 0 24px;
      font-weight: 500;
      font-size: 16px;
    }
 #shopify-section-{{section.id}} .product-sizechart-content   .product-points-list li{
      margin-bottom: 15px;
      font-size: 14px;
    }
  }
</style>

{% assign product = section.settings.product %}

<div class="content-wrapper">
  <div class="product-page-layout">
    <div class="gallery-column">
      {% for block in section.blocks %}
        {%- case block.type -%}
          {%- when 'media' -%}
              {% assign product = section.settings.product %}
              <div class="gallery-section" data-section-type="gallery">
                <div class="main-image-wrapper">
                  <button class="arrow arrow-left" aria-label="Previous Image">←</button>
                  <div class="main-image">
                    {% if block.settings.main_image %}
                      <img src="{{ block.settings.main_image | img_url: 'large' }}" alt="{{ block.settings.main_image.alt }}" data-index="0">
                    {% else %}
                      {% if product.images.size > 0 %}
                        <img src="{{ product.images.first | img_url: 'large' }}" alt="{{ product.title }}" data-index="0">
                      {% else %}
                        <img src="https://via.placeholder.com/500x500.png?text=Demo+Product+Image" alt="Demo Product Image" data-index="0">
                      {% endif %}
                    {% endif %}
                  </div>
                  <button class="arrow arrow-right" aria-label="Next Image">→</button>
                </div>
                <div class="thumbnails">
                  {% if product.images.size > 0 %}
                    {% for image in product.images %}
                      <img src="{{ image.src | img_url: 'thumbnail' }}" alt="{{ image.alt }}" class="thumbnail" data-main-image="{{ image.src | img_url: 'large' }}" data-index="{{ forloop.index0 }}">
                    {% endfor %}
                  {% else %}
                    <img src="https://via.placeholder.com/60x60.png?text=Thumb+1" alt="Thumbnail 1" class="thumbnail" data-main-image="https://via.placeholder.com/500x500.png?text=Demo+Product+Image+1" data-index="0">
                    <img src="https://via.placeholder.com/60x60.png?text=Thumb+2" alt="Thumbnail 2" class="thumbnail" data-main-image="https://via.placeholder.com/500x500.png?text=Demo+Product+Image+2" data-index="1">
                    <img src="https://via.placeholder.com/60x60.png?text=Thumb+3" alt="Thumbnail 3" class="thumbnail" data-main-image="https://via.placeholder.com/500x500.png?text=Demo+Product+Image+3" data-index="2">
                  {% endif %}
                </div>
              </div>
              <script>
                document.addEventListener('DOMContentLoaded', () => {
              
                const gallery = document.querySelector('.gallery-section');
                const mainImage = gallery.querySelector('.main-image img');
                const thumbnails = gallery.querySelectorAll('.thumbnails .thumbnail');
                const arrowLeft = gallery.querySelector('.arrow-left');
                const arrowRight = gallery.querySelector('.arrow-right');
                
                let currentIndex = 0;
                const totalImages = thumbnails.length;
                
                // Функция для обновления основного изображения
                const updateMainImage = (index) => {
                  const thumbnail = thumbnails[index];
                  mainImage.src = thumbnail.dataset.mainImage;
                  mainImage.dataset.index = index;
                  currentIndex = index;
                
                  thumbnails.forEach(thumb => thumb.classList.remove('active'));
                  thumbnail.classList.add('active');
                };
                
                // Клик по превьюшке
                thumbnails.forEach((thumbnail, index) => {
                  thumbnail.addEventListener('click', () => {
                    updateMainImage(index);
                  });
                });
                
                // Клик по стрелке влево
                arrowLeft.addEventListener('click', () => {
                  let newIndex = currentIndex - 1;
                  if (newIndex < 0) {
                    newIndex = totalImages - 1;
                  }
                  updateMainImage(newIndex);
                });
                
                // Клик по стрелке вправо
                arrowRight.addEventListener('click', () => {
                  let newIndex = currentIndex + 1;
                  if (newIndex >= totalImages) {
                    newIndex = 0;
                  }
                  updateMainImage(newIndex);
                });
                
                // Устанавливаем первое изображение как активное
                if (thumbnails.length > 0) {
                  updateMainImage(0);
                }
                
                // === Обработка свайпов на мобильных ===
                let touchStartX = 0;
                
                gallery.addEventListener('touchstart', (e) => {
                  touchStartX = e.changedTouches[0].screenX;
                });
                
                gallery.addEventListener('touchend', (e) => {
                  const touchEndX = e.changedTouches[0].screenX;
                  const deltaX = touchEndX - touchStartX;
                  const minDistance = 50;
                
                  if (Math.abs(deltaX) > minDistance) {
                    if (deltaX < 0) {
                      // свайп влево
                      let newIndex = currentIndex + 1;
                      if (newIndex >= totalImages) newIndex = 0;
                      updateMainImage(newIndex);
                    } else {
                      // свайп вправо
                      let newIndex = currentIndex - 1;
                      if (newIndex < 0) newIndex = totalImages - 1;
                      updateMainImage(newIndex);
                    }
                  }
                });
                });
              </script>
        {%- endcase -%}
      {% endfor %}
    </div>
    <div class="content-column">
      <div class="heading">
        {% if section.settings.uppertitle != blank %}
          <div class="uppertitle">{{ section.settings.uppertitle }} {% for i in (1..5) %}{% render 'star_comparison' %}{% endfor %}</div>
        {% endif %}
        <div class="title">
          {%- if product.title != blank -%}
           <h2>{{ product.title }}</h2>
          {%- endif -%}
        </div>
     
      </div>
  
   {% for block in section.blocks %}
      {%- case block.type -%}
  

     {%- when 'price' -%}
      <div class="price-block">
        <div class="cprice">{{ product.compare_at_price | money | default: "£99.99"  }}</div> <div class="price">{{ product.price | money | default: "£99.99" }}</div>
        {% if product.compare_at_price > product.price %}
          {% assign discount = product.compare_at_price | minus: product.price %}
          {% assign discount_percent = discount | times: 100 | divided_by: product.compare_at_price %}
          <div class="priced">save {{ discount_percent | round }}%</div>
        {% endif %}
          <div class="instock" >
            {% if product.available %}
                <svg width="25" height="25" viewBox="0 0 25 25" xmlns="http://www.w3.org/2000/svg"
                 style="background:white; overflow: visible; display: block;">
            
              <circle cx="12.5" cy="12.5" r="4" fill="{{ block.settings.intstock_color }}" />
            
            
              <circle class="ripple" cx="12.5" cy="12.5" r="4" fill="none" stroke="#a8d5a2" stroke-width="1" />
              <circle class="ripple" cx="12.5" cy="12.5" r="4" fill="none" stroke="#a8d5a2" stroke-width="1" />
              <circle class="ripple" cx="12.5" cy="12.5" r="4" fill="none" stroke="#a8d5a2" stroke-width="1" />
            
              <style>
                .ripple {
                  transform-origin: center;
                  animation: ripple 1.8s infinite ease-out;
                }
                .ripple:nth-of-type(2) { animation-delay: 0s; }
                .ripple:nth-of-type(3) { animation-delay: 0.6s; }
                .ripple:nth-of-type(4) { animation-delay: 1.2s; }
            
                @keyframes ripple {
                  0% {
                    r: 4;
                    opacity: 0.8;
                    stroke-width: 1;
                  }
                  100% {
                    r: 25;
                    opacity: 0;
                    stroke-width: 0;
                  }
                }
              </style>
            </svg>
             <div style="color: {{ block.settings.instock_color }}; align-content: center;" >{{ block.settings.instock_text }}</div>
            {% else %}
              <div style="color: {{ block.settings.outstock_color }};" > {{ block.settings.outstock_text }}</div>
            {% endif %}
      </div>
    </div>
  {%- when 'description' -%}
    <div class="description-block" >
    
      <div class="short-description" style="color: {{ block.settings.text_color }}">{{ product.description }}</div>
      
    </div>

 {%- when 'points' -%}
   <style>
    #shopify-section-{{section.id}}   .product-points-section li
     {
       color: {{section.settings.color}};
     }
   </style>
    <div class="product-points-content">
 
      <ul class="product-points-list">
        <li>
          {% if block.settings.icon_1 != blank %}
            <img src="{{ section.settings.icon_1 | img_url: '24x24' }}" alt="Icon 1">
          {% else %}
            {% if block.settings.icon_1_text != blank %}
          <span class="material-symbols-outlined color">     {{ section.settings.icon_1_text }}</span>
            {% else %}
              {% render 'icon_number_1' %}
            {% endif %}
          {% endif %}
          {{ block.settings.point_1_text }}
        </li>
        <li >
          {% if block.settings.icon_2 != blank %}
            <img src="{{ block.settings.icon_2 | img_url: '24x24' }}" alt="Icon 2">
          {% else %}
            {% if block.settings.icon_2_text != blank %}
              <span class="material-symbols-outlined "> {{ section.settings.icon_2_text }}</span>
            {% else %}
              {% render 'icon_number_2' %}
            {% endif %}
          {% endif %}
          {{ block.settings.point_2_text }}
        </li>
        <li>
          {% if block.settings.icon_3 != blank %}
            <img src="{{ section.settings.icon_3 | img_url: '24x24' }}" alt="Icon 3">
          {% else %}
            {% if block.settings.icon_3_text != blank %}
              <span class="material-symbols-outlined">{{ section.settings.icon_3_text }}</span>
            {% else %}
              {% render 'icon_number_3' %}
            {% endif %}
          {% endif %}
          {{ block.settings.point_3_text }}
        </li>
      </ul>
    </div>

   
 {%- when 'trust-icons' -%}     
      <style>
         
        #shopify-section-{{section.id}} .icon-text {
        font-size: 14px;
        line-height: 1.4;
         {% if block.settings.txt_align == 'right' %}
           width: 85px;
        padding-left: 10px;
           {% endif %}
        
      }
      
        #shopify-section-{{section.id}} .icon-items {
        display: flex;
         {% if block.settings.txt_align == 'bottom' %}
      gap: 20px;
        {% endif %}
        
      
        justify-content: space-between;
        flex-wrap: wrap;
      }
      
        #shopify-section-{{section.id}}  .icon-item {
          {% if block.settings.txt_align == 'bottom' %}
        flex: 0 1 calc(25% - 15px); /* 4 items per row with gap */
         {% else %}
              flex: 0 1 30%;
             {% endif %}
        display: flex;
          {% if block.settings.txt_align == 'bottom' %}
        flex-direction: column;
          text-align: center;
        {% else %}
            width: 30%;
              text-align: left;
       {% endif %}
        align-items: center; 
      
      }
      
          @media (max-width: 767px)
          {
        #shopify-section-{{section.id}}       .icon-items {
            flex-wrap: wrap;
                {% if block.settings.txt_align == 'right' %}
                
              flex: unset;
                {% endif %}
                gap: 10px;
            }
         #shopify-section-{{section.id}}      .icon-item {
          {% if block.settings.txt_align == 'right' %}
            width: 50%;
            {% endif %}
            
          }
         </style>
         <div class="icon-items">
  
   
               <div class="icon-item">
        <!-- Icon display based on selected type -->
        <div class="icon-wrapper" style="background: {{ block.settings.background_item }}">
          {% if block.settings.icon_type1 == 'image' and block.settings.icon_image1 %}
            <img src="{{ block.settings.icon_image1 | img_url: '60x60' }}" alt="{{ block.settings.text1 | strip_html }}">
          {% elsif block.settings.icon_type1 == 'google_icon' and block.settings.google_icon_name1 %}
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ block.settings.google_icon_name1 }}</span>
          {% elsif block.settings.icon_type1 == 'symbol' and block.settings.icon_symbol1 %}
            <span style="color: {{ block.settings.icon_item }}">{{ block.settings.icon_symbol1 }}</span>
          {% else %}
            <!-- Fallback icon if none selected -->
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">science</span>
          {% endif %}
        </div>
        <!-- Rich text description -->
        <div class="icon-text">{{ block.settings.text1 }}</div>
      </div>
               <div class="icon-item">
        <!-- Icon display based on selected type 2 -->
        <div class="icon-wrapper" style="background: {{ block.settings.background_item }}">
          {% if block.settings.icon_type2 == 'image' and block.settings.icon_image2 %}
            <img src="{{ block.settings.icon_image2 | img_url: '60x60' }}" alt="{{ block.settings.text2 | strip_html }}">
          {% elsif block.settings.icon_type2 == 'google_icon' and block.settings.google_icon_name2 %}
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ block.settings.google_icon_name2 }}</span>
          {% elsif block.settings.icon_type2 == 'symbol' and block.settings.icon_symbol2 %}
            <span style="color: {{ block.settings.icon_item }}">{{ block.settings.icon_symbol2 }}</span>
          {% else %}
            <!-- Fallback icon if none selected -->
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">science</span>
          {% endif %}
        </div>
        <!-- Rich text description -->
        <div class="icon-text">{{ block.settings.text2 }}</div>
      </div>
               <div class="icon-item">
        <!-- Icon display based on selected type -->
        <div class="icon-wrapper" style="background: {{ block.settings.background_item }}">
          {% if block.settings.icon_type3 == 'image' and block.settings.icon_image3 %}
            <img src="{{ block.settings.icon_image3 | img_url: '60x60' }}" alt="{{ block.settings.text3 | strip_html }}">
          {% elsif block.settings.icon_type3 == 'google_icon' and block.settings.google_icon_name3 %}
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ block.settings.google_icon_name3 }}</span>
          {% elsif block.settings.icon_type3 == 'symbol' and block.settings.icon_symbol3 %}
            <span style="color: {{ block.settings.icon_item }}">{{ block.settings.icon_symbol3 }}</span>
          {% else %}
            <!-- Fallback icon if none selected -->
            <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">science</span>
          {% endif %}
        </div>
        <!-- Rich text description -->
        <div class="icon-text">{{ block.settings.text3}}</div>
      </div>
    </div>

 {%- when 'addon' -%}     


<style>
 #shopify-section-{{section.id}} h3
  
  {
  font-size: 1.2em;
  margin-bottom: 10px;
  font-weight: bold;
  margin-top: 0;
}
 #shopify-section-{{section.id}} .product-addons__item{
      border-radius: {{ block.settings.container_radius }}px;
      box-shadow: {% if block.settings.container_styling == "shadow" %}{{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_blur }}px {{ block.settings.box_shadow_spread }}px {{ block.settings.box_shadow_color }}{% else %}none{% endif %};
      border: {% if block.settings.container_styling == "card" %} {{ block.settings.card_border }}px solid {{ block.settings.card_border_color }}{% else %}none{% endif %};
      padding: {{ block.settings.padding_y_desk }}px {{ block.settings.padding_x_desk }}px;
    }
    @media (max-width: 768px) {
 #shopify-section-{{section.id}} .product-addons__item{
        padding: {{ block.settings.cpadding_y_mob }}px {{ block.settings.cpadding_x_mob }}px;
      }
    }
</style> 
  {% if block.settings.title != blank %}
    <h3>{{ block.settings.title | default: "Addon" }}</h3>
  {% endif %}
<div class="product-addons">
 
    {% assign addon_product = block.settings.product1 %}
    {% if addon_product != blank %}
      <div class="product-addons__item" data-variant-id="{{ addon_product.variants.first.id }}">
        <div class="product-addons__image">
          <img src="{{ addon_product.featured_image | image_url: width: 100 }}" alt="{{ addon_product.title }}" loading="lazy">
        </div>
        <div class="product-addons__info">
          <strong>{{ block.settings.custom_title | default: addon_product.title }}</strong>
        </div>
        <div class="product-addons__price-toggle">
          <div class="product-addons__price">
            <span class="product-addons__current">{{ addon_product.price | money }}</span>
            {% if addon_product.compare_at_price > addon_product.price %}
              <span class="product-addons__compare">{{ addon_product.compare_at_price | money }}</span>
            {% endif %}
          </div>
          <label class="product-addons__switch">
            <input type="checkbox" class="product-addons__toggle">
            <span class="product-addons__slider"></span>
          </label>
        </div>
      </div>
    {% endif %}
      {% assign addon_product = block.settings.product2 %}
    {% if addon_product != blank %}
      <div class="product-addons__item" data-variant-id="{{ addon_product.variants.first.id }}">
        <div class="product-addons__image">
          <img src="{{ addon_product.featured_image | image_url: width: 100 }}" alt="{{ addon_product.title }}" loading="lazy">
        </div>
        <div class="product-addons__info">
          <strong>{{ block.settings.custom_title2 | default: addon_product.title }}</strong>
        </div>
        <div class="product-addons__price-toggle">
          <div class="product-addons__price">
            <span class="product-addons__current">{{ addon_product.price | money }}</span>
            {% if addon_product.compare_at_price > addon_product.price %}
              <span class="product-addons__compare">{{ addon_product.compare_at_price | money }}</span>
            {% endif %}
          </div>
          <label class="product-addons__switch">
            <input type="checkbox" class="product-addons__toggle">
            <span class="product-addons__slider"></span>
          </label>
        </div>
      </div>
    {% endif %}
      {% assign addon_product = block.settings.product3 %}
    {% if addon_product != blank %}
      <div class="product-addons__item" data-variant-id="{{ addon_product.variants.first.id }}">
        <div class="product-addons__image">
          <img src="{{ addon_product.featured_image | image_url: width: 100 }}" alt="{{ addon_product.title }}" loading="lazy">
        </div>
        <div class="product-addons__info">
          <strong>{{ block.settings.custom_title3 | default: addon_product.title }}</strong>
        </div>
        <div class="product-addons__price-toggle">
          <div class="product-addons__price">
            <span class="product-addons__current">{{ addon_product.price | money }}</span>
            {% if addon_product.compare_at_price > addon_product.price %}
              <span class="product-addons__compare">{{ addon_product.compare_at_price | money }}</span>
            {% endif %}
          </div>
          <label class="product-addons__switch">
            <input type="checkbox" class="product-addons__toggle">
            <span class="product-addons__slider"></span>
          </label>
        </div>
      </div>
    {% endif %}
      
      
</div>

      




<script>
  document.addEventListener('DOMContentLoaded', function () {
    const addonForm = document.querySelector('form[action^="/cart"]');

    if (addonForm) {
      addonForm.addEventListener('submit', function (e) {
        const selectedAddons = document.querySelectorAll('.product-addons__toggle:checked');
        selectedAddons.forEach((checkbox) => {
          const variantId = checkbox.closest('.product-addons__item').dataset.variantId;
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = 'items[]';
          input.value = variantId;
          addonForm.appendChild(input);
        });
      });
    }
  });
</script>





        
 {%- when 'gifts' -%}          
        
        
  <div class="unlock-gifts-section" >
  <style>
    .unlock-gifts-section .gift-image{
      overflow: hidden;
      border-radius: {{ block.settings.container_radius }}px;
      box-shadow: {% if block.settings.container_styling == "shadow" %}{{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_blur }}px {{ block.settings.box_shadow_spread }}px {{ block.settings.box_shadow_color }}{% else %}none{% endif %};
      border: {% if block.settings.container_styling == "card" %} {{ block.settings.card_border }}px solid {{ block.settings.card_border_color }}{% else %}none{% endif %};
    }
  </style>
  <!-- Section title -->
  <h3>{{ block.settings.title | default: "Unlock Gifts" }}</h3>

  <!-- Container for gifts -->
  <gift-block class="gifts">
  
      <div class="gift" data-locked="true"
        data-giftid="{{block.settings.gift_product1.variants.first.id }}"
        data-giftimg="{{ block.settings.gift_image1 | img_url: '400x400' }}"
        data-giftarea="{{ block.settings.gift_area1 }}"
        data-qtyunlock="{{ block.settings.gift_qty1 }}"
        data-priceunlock="{{ block.settings.gift_summ1 | times: 100 }}"
        data-unlockrulle="{{ block.settings.gift_rulle_option1 }}"
       >
        <!-- Gift image or lock image -->
        <div class="gift-image">         
           <svg width="88" height="88" viewBox="0 0 88 88" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M68.75 85.5H19.25C17.062 85.5 14.9635 84.6308 13.4164 83.0836C11.8692 81.5365 11 79.438 11 77.25V47C11 44.812 11.8692 42.7135 13.4164 41.1664C14.9635 39.6192 17.062 38.75 19.25 38.75H68.75C70.938 38.75 73.0365 39.6192 74.5836 41.1664C76.1308 42.7135 77 44.812 77 47V77.25C77 79.438 76.1308 81.5365 74.5836 83.0836C73.0365 84.6308 70.938 85.5 68.75 85.5ZM19.25 44.25C18.5207 44.25 17.8212 44.5397 17.3055 45.0555C16.7897 45.5712 16.5 46.2707 16.5 47V77.25C16.5 77.9793 16.7897 78.6788 17.3055 79.1945C17.8212 79.7103 18.5207 80 19.25 80H68.75C69.4793 80 70.1788 79.7103 70.6945 79.1945C71.2103 78.6788 71.5 77.9793 71.5 77.25V47C71.5 46.2707 71.2103 45.5712 70.6945 45.0555C70.1788 44.5397 69.4793 44.25 68.75 44.25H19.25Z" fill="#101820"/>
            <path d="M66 44.25H22C21.2707 44.25 20.5712 43.9603 20.0555 43.4445C19.5397 42.9288 19.25 42.2293 19.25 41.5V25C19.25 19.1652 21.5678 13.5695 25.6936 9.44365C29.8195 5.31785 35.4152 3 41.25 3H46.75C52.5848 3 58.1805 5.31785 62.3064 9.44365C66.4322 13.5695 68.75 19.1652 68.75 25V41.5C68.75 42.2293 68.4603 42.9288 67.9445 43.4445C67.4288 43.9603 66.7293 44.25 66 44.25ZM24.75 38.75H63.25V25C63.25 20.6239 61.5116 16.4271 58.4173 13.3327C55.3229 10.2384 51.1261 8.5 46.75 8.5H41.25C36.8739 8.5 32.6771 10.2384 29.5827 13.3327C26.4884 16.4271 24.75 20.6239 24.75 25V38.75Z" fill="#101820"/>
            <path d="M44 63.5C42.9122 63.5 41.8488 63.1774 40.9444 62.5731C40.0399 61.9687 39.3349 61.1098 38.9187 60.1048C38.5024 59.0998 38.3935 57.9939 38.6057 56.927C38.8179 55.8601 39.3417 54.8801 40.1109 54.1109C40.8801 53.3417 41.8601 52.8179 42.927 52.6057C43.9939 52.3935 45.0998 52.5024 46.1048 52.9187C47.1098 53.3349 47.9687 54.0399 48.5731 54.9444C49.1774 55.8488 49.5 56.9122 49.5 58C49.5 59.4587 48.9205 60.8576 47.8891 61.8891C46.8576 62.9205 45.4587 63.5 44 63.5Z" fill="#101820"/>
            <path d="M46.75 60.75H41.25V71.75H46.75V60.75Z" fill="#101820"/>
          </svg>
        </div>
        <!-- Gift title -->
        <div class="gift-title">{{ block.settings.gift_title1 | default: "Gift" }}</div>
      </div>
           <div class="gift" data-locked="true"
        data-giftid="{{block.settings.gift_product2.variants.first.id }}"
        data-giftimg="{{ block.settings.gift_image2 | img_url: '400x400' }}"
        data-giftarea="{{ block.settings.gift_area2 }}"
        data-qtyunlock="{{ block.settings.gift_qty2 }}"
        data-priceunlock="{{ block.settings.gift_summ2 | times: 100 }}"
        data-unlockrulle="{{ block.settings.gift_rulle_option2 }}"
       >
        <!-- Gift image or lock image -->
        <div class="gift-image">         
           <svg width="88" height="88" viewBox="0 0 88 88" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M68.75 85.5H19.25C17.062 85.5 14.9635 84.6308 13.4164 83.0836C11.8692 81.5365 11 79.438 11 77.25V47C11 44.812 11.8692 42.7135 13.4164 41.1664C14.9635 39.6192 17.062 38.75 19.25 38.75H68.75C70.938 38.75 73.0365 39.6192 74.5836 41.1664C76.1308 42.7135 77 44.812 77 47V77.25C77 79.438 76.1308 81.5365 74.5836 83.0836C73.0365 84.6308 70.938 85.5 68.75 85.5ZM19.25 44.25C18.5207 44.25 17.8212 44.5397 17.3055 45.0555C16.7897 45.5712 16.5 46.2707 16.5 47V77.25C16.5 77.9793 16.7897 78.6788 17.3055 79.1945C17.8212 79.7103 18.5207 80 19.25 80H68.75C69.4793 80 70.1788 79.7103 70.6945 79.1945C71.2103 78.6788 71.5 77.9793 71.5 77.25V47C71.5 46.2707 71.2103 45.5712 70.6945 45.0555C70.1788 44.5397 69.4793 44.25 68.75 44.25H19.25Z" fill="#101820"/>
            <path d="M66 44.25H22C21.2707 44.25 20.5712 43.9603 20.0555 43.4445C19.5397 42.9288 19.25 42.2293 19.25 41.5V25C19.25 19.1652 21.5678 13.5695 25.6936 9.44365C29.8195 5.31785 35.4152 3 41.25 3H46.75C52.5848 3 58.1805 5.31785 62.3064 9.44365C66.4322 13.5695 68.75 19.1652 68.75 25V41.5C68.75 42.2293 68.4603 42.9288 67.9445 43.4445C67.4288 43.9603 66.7293 44.25 66 44.25ZM24.75 38.75H63.25V25C63.25 20.6239 61.5116 16.4271 58.4173 13.3327C55.3229 10.2384 51.1261 8.5 46.75 8.5H41.25C36.8739 8.5 32.6771 10.2384 29.5827 13.3327C26.4884 16.4271 24.75 20.6239 24.75 25V38.75Z" fill="#101820"/>
            <path d="M44 63.5C42.9122 63.5 41.8488 63.1774 40.9444 62.5731C40.0399 61.9687 39.3349 61.1098 38.9187 60.1048C38.5024 59.0998 38.3935 57.9939 38.6057 56.927C38.8179 55.8601 39.3417 54.8801 40.1109 54.1109C40.8801 53.3417 41.8601 52.8179 42.927 52.6057C43.9939 52.3935 45.0998 52.5024 46.1048 52.9187C47.1098 53.3349 47.9687 54.0399 48.5731 54.9444C49.1774 55.8488 49.5 56.9122 49.5 58C49.5 59.4587 48.9205 60.8576 47.8891 61.8891C46.8576 62.9205 45.4587 63.5 44 63.5Z" fill="#101820"/>
            <path d="M46.75 60.75H41.25V71.75H46.75V60.75Z" fill="#101820"/>
          </svg>
        </div>
        <!-- Gift title -->
        <div class="gift-title">{{ block.settings.gift_title2 | default: "Gift" }}</div>
      </div>
                   <div class="gift" data-locked="true"
        data-giftid="{{block.settings.gift_product3.variants.first.id }}"
        data-giftimg="{{ block.settings.gift_image3 | img_url: '400x400' }}"
        data-giftarea="{{ block.settings.gift_area3 }}"
        data-qtyunlock="{{ block.settings.gift_qty3 }}"
        data-priceunlock="{{ block.settings.gift_summ3 | times: 100 }}"
        data-unlockrulle="{{ block.settings.gift_rulle_option3 }}"
       >
        <!-- Gift image or lock image -->
        <div class="gift-image">         
           <svg width="88" height="88" viewBox="0 0 88 88" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M68.75 85.5H19.25C17.062 85.5 14.9635 84.6308 13.4164 83.0836C11.8692 81.5365 11 79.438 11 77.25V47C11 44.812 11.8692 42.7135 13.4164 41.1664C14.9635 39.6192 17.062 38.75 19.25 38.75H68.75C70.938 38.75 73.0365 39.6192 74.5836 41.1664C76.1308 42.7135 77 44.812 77 47V77.25C77 79.438 76.1308 81.5365 74.5836 83.0836C73.0365 84.6308 70.938 85.5 68.75 85.5ZM19.25 44.25C18.5207 44.25 17.8212 44.5397 17.3055 45.0555C16.7897 45.5712 16.5 46.2707 16.5 47V77.25C16.5 77.9793 16.7897 78.6788 17.3055 79.1945C17.8212 79.7103 18.5207 80 19.25 80H68.75C69.4793 80 70.1788 79.7103 70.6945 79.1945C71.2103 78.6788 71.5 77.9793 71.5 77.25V47C71.5 46.2707 71.2103 45.5712 70.6945 45.0555C70.1788 44.5397 69.4793 44.25 68.75 44.25H19.25Z" fill="#101820"/>
            <path d="M66 44.25H22C21.2707 44.25 20.5712 43.9603 20.0555 43.4445C19.5397 42.9288 19.25 42.2293 19.25 41.5V25C19.25 19.1652 21.5678 13.5695 25.6936 9.44365C29.8195 5.31785 35.4152 3 41.25 3H46.75C52.5848 3 58.1805 5.31785 62.3064 9.44365C66.4322 13.5695 68.75 19.1652 68.75 25V41.5C68.75 42.2293 68.4603 42.9288 67.9445 43.4445C67.4288 43.9603 66.7293 44.25 66 44.25ZM24.75 38.75H63.25V25C63.25 20.6239 61.5116 16.4271 58.4173 13.3327C55.3229 10.2384 51.1261 8.5 46.75 8.5H41.25C36.8739 8.5 32.6771 10.2384 29.5827 13.3327C26.4884 16.4271 24.75 20.6239 24.75 25V38.75Z" fill="#101820"/>
            <path d="M44 63.5C42.9122 63.5 41.8488 63.1774 40.9444 62.5731C40.0399 61.9687 39.3349 61.1098 38.9187 60.1048C38.5024 59.0998 38.3935 57.9939 38.6057 56.927C38.8179 55.8601 39.3417 54.8801 40.1109 54.1109C40.8801 53.3417 41.8601 52.8179 42.927 52.6057C43.9939 52.3935 45.0998 52.5024 46.1048 52.9187C47.1098 53.3349 47.9687 54.0399 48.5731 54.9444C49.1774 55.8488 49.5 56.9122 49.5 58C49.5 59.4587 48.9205 60.8576 47.8891 61.8891C46.8576 62.9205 45.4587 63.5 44 63.5Z" fill="#101820"/>
            <path d="M46.75 60.75H41.25V71.75H46.75V60.75Z" fill="#101820"/>
          </svg>
        </div>
        <!-- Gift title -->
        <div class="gift-title">{{ block.settings.gift_title3 | default: "Gift" }}</div>
      </div>
  
  </gift-block>
</div>
              
 {%- when 'size' -%}         

 <div class="product-sizechart-content" style="background: {{ block.settings.background_color }};">

    <ul class="product-points-list">
      <li>
        {% if block.settings.icon_1 != blank %}
          <img src="{{ block.settings.icon_1 | img_url: '24x24' }}" alt="Icon 1">
        {% elsif section.settings.icon_1_text != blank %}
          <span class="material-symbols-outlined">{{ section.settings.icon_1_text }}</span>
        {% endif %}

        <span
          id="sizechart-link-wrapper"
          data-discount="{{ block.settings.discount }}"
          data-success-message="{{ block.settings.discountsuc | escape }}"
          data-redirect="{{ shop.url }}/discount/{{ block.settings.discount }}?redirect={{ request.path }}">
          <a onclick="event.preventDefault(); document.getElementById('sizechart-modal').style.display = 'flex';" class="open-sizechart" 
            href="#"
            style="
              color: {{ block.settings.text_color }};
              font-size: {% case block.settings.title_size %}
                {% when 'small' %}28px
                {% when 'medium' %}20px
                {% when 'large' %}36px
              {% endcase %};
              font-weight: 700;
              text-transform: {{ block.settings.title_format }};"
           >
            {{ block.settings.title }}
          </a>
        </span>
      </li>

     
    </ul>

      
      <div id="sizechart-modal" class="sizechart-modal">
        <div class="sizechart-modal-backdrop"></div>
        <div class="sizechart-modal-content">
          <button class="sizechart-close" aria-label="Close popup">&times;</button>
          {% if block.settings.image != blank %}
            <img src="{{ block.settings.image | img_url: 'master' }}" alt="Size Chart">
          {% else %}
            <p>No image provided</p>
          {% endif %}
        </div>
      </div>
      
      
      <div id="sizechart-modal" style="
        display: none;
        position: fixed;
        top: 0; left: 0;
        width: 100vw; height: 100vh;
        background-color: rgba(0, 0, 0, 0.6);
        z-index: 9999;
        justify-content: center;
        align-items: center;
      ">
        <div id="sizechart-modal-content" style="
          position: relative;
          background: white;
          padding: 20px;
          max-width: 90vw;
          max-height: 90vh;
          overflow: auto;
          border-radius: 8px;
          box-shadow: 0 0 15px rgba(0,0,0,0.3);
        ">
          <button id="sizechart-close" style="
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 28px;
            background: none;
            border: none;
            cursor: pointer;
          ">&times;</button>
      
          {% if block.settings.image != blank %}
            <img src="{{ block.settings.image | img_url: 'master' }}" alt="Size Chart" style="
              width: 100%;
              height: auto;
              max-height: 80vh;
              object-fit: contain;
              display: block;
            ">
          {% else %}
            <p>No image provided</p>
          {% endif %}
      </div>
  </div>
 </div>     
      


      
      <script>
        document.addEventListener("DOMContentLoaded", function () {
          const modal = document.getElementById("sizechart-modal");
          const modalContent = document.getElementById("sizechart-modal-content");
          const closeBtn = document.getElementById("sizechart-close");
      
        
          closeBtn.addEventListener("click", function () {
            modal.style.display = "none";
          });
      
      
          document.addEventListener("keydown", function (e) {
            if (e.key === "Escape") {
              modal.style.display = "none";
            }
          });
      
       
          modal.addEventListener("click", function (e) {
            if (!modalContent.contains(e.target)) {
              modal.style.display = "none";
            }
          });
        });
      </script>





      
 {%- when 'add' -%}
      
<style>
 #shopify-section-{{section.id}}  add-card-prod .submit_add_cart{
      border-radius: {{ block.settings.button_radius }}px;
      background: {{ block.settings.button_color }};
      color: {{ block.settings.button_text_color }};
      border: none;
    }
   #shopify-section-{{section.id}}  add-card-prod .submit_add_cart svg path{
      stroke: {{ block.settings.button_text_color }};
    }
   #shopify-section-{{section.id}} quantity-inputs {

      {% if block.settings.qty_align =='right' %}
    
        order: 2;
      {% else %}
        order:0;      
        {% endif %}
    }
     #shopify-section-{{section.id}} .payment-methods{
        margin: 20px 0 0;
     }
</style>
       <add-card-prod>
    {%- form 'product',
        product,
        id: product_form_id,
        class: 'form form_add_cartp',
        novalidate: 'novalidate',
        data-type: 'add-to-cart-form'
      -%}

    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" {% if product.selected_or_first_available_variant.available == false
            or quantity_rule_soldout
            or product.selected_or_first_available_variant == null
          %} disabled {% endif %} class="product-variant-id" id="product-variant-id">

    <quantity-inputs class="cart-quantity">
        <button class="btn__button" name="minus" type="button">
            {{ 'icon-minus.svg' | inline_asset_content }}
        </button>
        <input class="" type="number" name="quantity" step="1" value="1" aria-label="{{ 'products.product.quantity.input_label' | t: product: product.selected_or_first_available_variant.title | escape }}">
        <button class="btn__button" name="plus" type="button">
            {{ 'icon-plus.svg' | inline_asset_content }}
        </button>
    </quantity-inputs>

    {%- liquid
            assign check_against_inventory = true
            if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
              assign check_against_inventory = false
            endif
            if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
              assign quantity_rule_soldout = true
            endif
          -%}
    <button type="submit" name="add" class="submit_add_cart" {% if product.selected_or_first_available_variant.available == false
              or quantity_rule_soldout
              or product.selected_or_first_available_variant == null
            %} disabled {% endif %}>

        {%- if product.selected_or_first_available_variant == null -%}
        {{ 'products.product.unavailable' | t }}
        {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
        {{ 'products.product.sold_out' | t }}
        {%- else -%}
        {{ 'products.product.add_to_cart' | t }}
        {%- endif -%}

        {% if block.settings.icon != blank  %}
          <i class="icon_cart-btns"><img src="{{ block.settings.icon | img_url: '150x' }}" alt="Icon add cart button"></i>
        {% elsif block.settings.icon_alt != blank %}
          <i class="icon_cart-btns material-symbols-outlined">{{ block.settings.icon_alt }}</i>
        {% else %}
          <i class="icon_cart-btns">{% render 'icon-cart-svg' %}</i> 
        {% endif %}
       


    </button>
    {%- if show_dynamic_checkout -%}
    {{ form | payment_button }}
    {%- endif -%}

    {%- endform -%}

    <div class="payment-methods">
        <div class="payment-secure">
            {% render 'icon-secure-prod' %}
            <div class="payment-secure-text">
                <p><strong>100% Secure Checkout</strong></p>
                <p>Guaranteed Secure</p>
            </div>
        </div>
        {% if block.settings.show_payment_icons %}
          <ul class="payment-icons-list">
            {% for i in (1..7) %}
              {% assign icon_key = "payment_icon_" | append: i %}
              {% assign icon = settings[icon_key] %}
              {% if icon != blank %}
                  <li><img src="{{ icon | img_url: 'master' }}" class="icon icon--full-color" alt="" /></li>
            {% endif %}
            {% endfor %}     
          </ul>
        {% endif %}
    </div>
  </add-card-prod>

        {%- when 'timeline' -%}


<div class="lab-tested-section" data-timeline-enabled="{{ block.settings.delivery_timeline_enabled }}">

    {% for i in (1..3) %}
      {% assign icon_key = "icon_" | append: i %}
      {% assign icon_alt_key = "icon_" | append: i | append: "_alt" %}
      {% assign text_key = "text_" | append: i %}
      {% assign image = block.settings[icon_key] %}
      {% assign alt_icon = block.settings[icon_alt_key] %}
<style>
 #shopify-section-{{section.id}} .lab-tested-section:after{
  background: {{block.settings.stroke_item}};
}
  @media (max-width: 768px)
  {
 #shopify-section-{{section.id}} .lab-tested-section:after {
    content: '';
    height: 7px;
    top: 24px;
    width: 70%;
  }
  }
</style>
      <div class="lab-tested-step-wrapper">
        <div class="lab-tested-step">
          <div class="lab-tested-circle" style="background: {{ block.settings.stroke_item }}">
            <div class="lab-tested-inner" style="background: {{ block.settings.background_item }}">
              {% if image != blank %}
                <img src="{{ image | img_url: '150x' }}" alt="Icon {{ i }}">
              {% elsif alt_icon contains 'material-icons' %}
                <span class="material-icons material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ alt_icon | remove: 'material-icons ' }}</span>
              {% elsif alt_icon != blank %}
                <i class="material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ alt_icon }}</i>
              {% else %}
                <div class="placeholder-icon" style="color: {{ block.settings.icon_item }}" ></div>
              {% endif %}
            </div>
          </div>
          <div class="lab-tested-text">
            {{ block.settings[text_key] | newline_to_br }}
          </div>
        </div>
        
      </div>
    {% endfor %}
  </div>
{% if block.settings.delivery_timeline_enabled %}
<script>
  document.addEventListener("DOMContentLoaded", function () {
    function formatDate(date) {
      const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                      "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      const day = date.getDate();
      const suffix = (d => d > 3 && d < 21 ? "th" :
        ["st", "nd", "rd"][((d % 10) - 1)] || "th")(day);
      return `${months[date.getMonth()]} ${day}${suffix}`;
    }

    const today = new Date();

    const daysToStep2 = {{ block.settings.days_to_step_2 }};
    const daysToStep3 = {{ block.settings.days_to_step_3 }};

    // Step 1: Today
    const date1 = formatDate(today);

    // Step 2: today + daysToStep2
    const step2Date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + daysToStep2);
    const step2Range = `${formatDate(step2Date)} - ${formatDate(new Date(step2Date.getFullYear(), step2Date.getMonth(), step2Date.getDate() + 1))}`;

    // Step 3: today + daysToStep3
    const step3Date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + daysToStep3);
    const step3Range = `${formatDate(step3Date)} - ${formatDate(new Date(step3Date.getFullYear(), step3Date.getMonth(), step3Date.getDate() + 1))}`;

    const labels = [
      `{{ block.settings.step_1_label | escape }}`,
      `{{ block.settings.step_2_label | escape }}`,
      `{{ block.settings.step_3_label | escape }}`
    ];

    const textBlocks = document.querySelectorAll(' #shopify-section-{{section.id}} .lab-tested-text');
   const finalTexts = [date1, step2Range, step3Range].map((d, i) => `<strong>${d}</strong><br>${labels[i]}`);

    textBlocks.forEach((el, i) => {
      if (i < 3) el.innerHTML = finalTexts[i];
    });
  });
</script>
{% endif %}

    {%- when 'video' -%}
      <div class="content-section video-section" data-section-type="content">
        {% if block.settings.video_type == 'file' and block.settings.video_file %}
          <div class="video-wrapper">
            <video controls preload="metadata" playsinline>
                <source src="{{ block.settings.video_file.sources[1].url }}" type="video/mp4">
            </video>
          </div>
        {% elsif block.settings.video_type == 'youtube' and block.settings.youtube_url != blank %}
          <div class="video-wrapper">
            <iframe
              src="{{ block.settings.youtube_url | replace: 'watch?v=', 'embed/' }}"
              frameborder="0"
              allowfullscreen
            ></iframe>
          </div>
        {% else %}
          <div class="video-placeholder">
            <p>Video Here</p>
          </div>
        {% endif %}
      </div>

      {%- when 'testimonial' -%}
        <div class="content-section product-testimonial-section" data-section-type="content">
        <style>
            #shopify-section-{{section.id}} .product-testimonial-section .testimonial-card{
              overflow: hidden;
              border-radius: {{ block.settings.container_radius }}px;
              box-shadow: {% if block.settings.container_styling == "shadow" %}{{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_blur }}px {{ block.settings.box_shadow_spread }}px {{ block.settings.box_shadow_color }}{% else %}none{% endif %};
              border: {% if block.settings.container_styling == "card" %} {{ block.settings.card_border }}px solid {{ block.settings.card_border_color }}{% else %}none{% endif %};
            }
        </style>
        <div class="testimonial-card">
          {% if block.settings.photo %}
            <img src="{{ block.settings.photo | img_url: '100x' }}" alt="Customer photo" class="testimonial-photo">
          {% endif %}
          <div class="testimonial-content">
            <p class="testimonial-text">“ {{ block.settings.testimonial }} ”</p>
            <div class="testimonial-footer">
              <strong>{{ block.settings.name }}</strong>
              {% if block.settings.verified %}
                <span class="verified-icon">✔️</span>
                <span class="verified-label">VERIFIED BUYER</span>
              {% endif %}
              <div class="testimonial-stars">
                {% for i in (1..5) %}
                  {% if i <= block.settings.rating %}
                    <span class="star">★</span>
                  {% else %}
                    <span class="star empty">☆</span>
                  {% endif %}
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
        </div>

        {%- when 'square_icon' -%}
          <div class="content-section safety-icons-section" data-section-type="content">
          <div class="square-icon-grid">
            {% for i in (1..4) %}
              {% assign icon_key = "icon_" | append: i %}
              {% assign icon_alt_key = "icon_" | append: i | append: "_alt" %}
              {% assign text_key = "text_" | append: i %}
              {% assign image = block.settings[icon_key] %}
              {% assign alt_icon = block.settings[icon_alt_key] %}
          
              <div class="square-icon-item" >
                <div class="square-icon-box" style="background: {{ block.settings.stroke_item }}">
                  <div class="square-icon-inner" style="background: {{ block.settings.background_item }}">
                    {% if image != blank %}
                      <img src="{{ image | img_url: '150x' }}" alt="Icon {{ i }}">
                    {% elsif alt_icon contains 'material-icons' %}
                      <span class="material-icons" style="color: {{ block.settings.icon_item }}">{{ alt_icon | remove: 'material-icons ' }}</span>
                    {% elsif alt_icon != blank %}
                      <i class="material-symbols-outlined" style="color: {{ block.settings.icon_item }}">{{ alt_icon }}</i>
                    {% else %}
                      <div class="placeholder-icon" style="color: {{ block.settings.icon_item }}"></div>
                    {% endif %}
                  </div>
                </div>
                {% if forloop.first %}
                  <div class="square-icon-text square-icon-text-mob">
                  <h4>{{ block.settings.text_title_mob }}</h4>
                  <p>{{ block.settings.text_mob }}</p>
                </div>
                {% endif %}
                <div class="square-icon-text">
                  {{ block.settings[text_key] | newline_to_br }}
                </div>
              </div>
            {% endfor %}
          </div>
          </div>

          {%- when 'pack_options' -%}

            <div class="content-section pack-options-section" data-section-type="content">
              <style>
                .pack-options-section .pack{
                  border-radius: {{ block.settings.container_radius }}px;
                  box-shadow: {% if block.settings.container_styling == "shadow" %}{{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_offset }}px {{ block.settings.box_shadow_blur }}px {{ block.settings.box_shadow_spread }}px {{ block.settings.box_shadow_color }}{% else %}none{% endif %};
                  border: {% if block.settings.container_styling == "card" %} {{ block.settings.card_border }}px solid {{ block.settings.card_border_color }}{% else %}none{% endif %};
                }
                .pack-options-section .pack.active,
                .pack-options-section .pack:hover{
                  border-color: {{ block.settings.card_border_color_active }};
                }
                .pack-options-section .pack.active:after{
                  position: absolute;
                  top: 0;
                  left: 0;
                  right: 0;
                  bottom: 0;
                  content: '';
                  opacity: 0.1;
                  background: {{ block.settings.card_border_color_active }};
                }
                .product-info-section .rating .rating-star{
                  color: {{ block.settings.star_color }};
                }
                .product-info-section .rating .rating-text{
                  color: {{ block.settings.review_color }};
                }
                .pack-options-section .discount-label{
                  color: {{ block.settings.discount_color }};
                  background-color: {{ block.settings.discount_color_bg }}
                }
                .pack-options-section .pack-quantity{
                  color: {{ block.settings.price_color }};
                  background-color: {{ block.settings.price_color_bg }}
                }
              </style>
              <pac-section class="packs">
                {% if block.settings.pack_title != blank %}
                    <div class="pack active" data-pack-id="{{ block.id }}_1">
                      <!-- Discount label -->
                      {% if block.settings.discount_label != blank %}
                        <span class="discount-label">{{ block.settings.discount_label }}</span>
                      {% endif %}
            
                      <!-- Pack image -->
                      <div class="pack-image">
                        {% if block.settings.pack_image %}
                          <img src="{{ block.settings.pack_image | img_url: '200x200' }}" alt="{{ block.settings.pack_title | escape }}">
                        {% else %}
                          <div class="placeholder-image"></div>
                        {% endif %}
                      </div>
            
                      <!-- Pack title -->
                      <h4 class="pack-title">{{ block.settings.pack_title | default: "Pack Option" }}</h4>
            
                      <!-- Pack quantity -->
                      <div class="pack-quantity" data-packquntity="{{ block.settings.pack_quantity }}">{{ block.settings.pack_quantity_text | default: "1 Pack" }}</div>
                      <div class="pack-shipping" style="color: {{ block.settings.pack_shipping_txt }}; background: {{ block.settings.pack_shipping_bg }};">{{ block.settings.pack_shipping }}</div>
                    </div>
                {% endif %}
                {% if block.settings.pack_title_2 != blank %}
                    <div class="pack active" data-pack-id="{{ block.id }}_1">
                      <!-- Discount label -->
                      {% if block.settings.discount_label_2 != blank %}
                        <span class="discount-label">{{ block.settings.discount_label_2 }}</span>
                      {% endif %}
            
                      <!-- Pack image -->
                      <div class="pack-image">
                        {% if block.settings.pack_image_2 %}
                          <img src="{{ block.settings.pack_image_2 | img_url: '200x200' }}" alt="{{ block.settings.pack_title_2 | escape }}">
                        {% else %}
                          <div class="placeholder-image"></div>
                        {% endif %}
                      </div>
            
                      <!-- Pack title -->
                      <h4 class="pack-title">{{ block.settings.pack_title_2 | default: "Pack Option" }}</h4>
            
                      <!-- Pack quantity -->
                      <div class="pack-quantity" data-packquntity="{{ block.settings.pack_quantity_2 }}">{{ block.settings.pack_quantity_text_2 | default: "1 Pack" }}</div>
                      <div class="pack-shipping" style="color: {{ block.settings.pack_shipping_txt }}; background: {{ block.settings.pack_shipping_bg }};">{{ block.settings.pack_shipping_2 }}</div>
                    </div>
                {% endif %}
                {% if block.settings.pack_title_3 != blank %}
                    <div class="pack active" data-pack-id="{{ block.id }}_1">
                      <!-- Discount label -->
                      {% if block.settings.discount_label_3 != blank %}
                        <span class="discount-label">{{ block.settings.discount_label_3 }}</span>
                      {% endif %}
            
                      <!-- Pack image -->
                      <div class="pack-image">
                        {% if block.settings.pack_image_3 %}
                          <img src="{{ block.settings.pack_image_3 | img_url: '200x200' }}" alt="{{ block.settings.pack_title_3 | escape }}">
                        {% else %}
                          <div class="placeholder-image"></div>
                        {% endif %}
                      </div>
            
                      <!-- Pack title -->
                      <h4 class="pack-title">{{ block.settings.pack_title_3 | default: "Pack Option" }}</h4>
            
                      <!-- Pack quantity -->
                      <div class="pack-quantity" data-packquntity="{{ block.settings.pack_quantity_3 }}">{{ block.settings.pack_quantity_text_3 | default: "1 Pack" }}</div>
                      <div class="pack-shipping" style="color: {{ block.settings.pack_shipping_txt }}; background: {{ block.settings.pack_shipping_bg }};">{{ block.settings.pack_shipping_3 }}</div>
                    </div>
                {% endif %}
              </pac-section>
            </div>
            {% when 'accordion' %}
              <div class="content-section accordion-section" data-section-type="content">
              <div class="accordion">
                {% for i in (1..10) %}
                  {% assign title_key = "title_" | append: i %}
                  {% assign content_key = "content_" | append: i %}
                  {% assign title = block.settings[title_key] %}
                  {% assign content = block.settings[content_key] %}
                  {% if title != blank  %}
                    <div class="accordion-item">
                      <div class="accordion-header" data-toggle="accordion-{{ i }}">
                        <h3>{{ title }}</h3>
                        <span class="accordion-icon">{% if forloop.first %}−{% else %}+{% endif %}</span>
                      </div>
                      <div class="accordion-content {% if forloop.first %}active{% endif %}" id="accordion-{{ i }}">
                        <p>{{ content }}</p>
                      </div>
                    </div>
                  {% endif %}
                {% endfor %}
              </div>
            </div>
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            const section = document.querySelector('.accordion-section');
            if (section) {
              const headers = section.querySelectorAll('.accordion-header');
              headers.forEach(header => {
                header.addEventListener('click', () => {
                  const content = section.querySelector(`#${header.getAttribute('data-toggle')}`);
                  const icon = header.querySelector('.accordion-icon');
                  
                  // Toggle active class on content
                  if (content.classList.contains('active')) {
                    content.classList.remove('active');
                    icon.textContent = '+';
                  } else {
                    // Close all other items
                    section.querySelectorAll('.accordion-content').forEach(item => {
                      item.classList.remove('active');
                    });
                    section.querySelectorAll('.accordion-icon').forEach(icon => {
                      icon.textContent = '+';
                    });
                    // Open the clicked item
                    content.classList.add('active');
                    icon.textContent = '−';
                  }
                });
              });
            }
          });
        </script>
        {% when 'option' %}
          <div class="content-section produсt-options-section" data-section-type="content">
          <custom-variant class="product-options-section">
          {% for option in product.options_with_values %}
              {% case option.name %}
              {% when 'color' %}
            {% assign option_color = product.options_with_values | where: 'name', "color" %}
                {% if option_color != blank %}
                {% case block.settings.color_style %}
                  {% when 'drop_color_d' %}
                    {% assign option_color = product.options_with_values | where: 'name', "color" %}
                    {% for option in option_color %}
                        <div class="option-group custom-variant-select">
                          <label>{{ block.settings.label }}</label>
                          <div class="custom-select" tabindex="0">
                            <div class="select-trigger">Select option</div>
                            <div class="select-options">
                                {% for velue in option.values %}
                                <div class="option-value" data-value="{{ velue.name }}" data-option-name="{{ option.name }}">
                                  {{ velue.name }}
                                </div>
                               {% endfor %}
                            </div>
                          </div>
                        </div>
                    {% endfor %}
                  {% when 'drop_color_c' %}
                    {% assign option_color = product.options_with_values | where: 'name', "color" %}
                    {% for option in option_color %}
                        <div class="option-group custom-variant-select">
                          <label>{{ block.settings.label }}</label>
                          <div class="custom-select" tabindex="0">
                            <div class="select-trigger">Select option</div>
                            <div class="select-options">
                                {% for velue in option.values %}
                                <div class="option-value" data-value="{{ velue.name }}" data-option-name="{{ option.name }}">
                                 <i class="custom_color_{{ velue.name | strip | escape | downcase | replace: ' ', '_'   }}"></i> {{ velue.name }}
                                </div>
                               {% endfor %}
                            </div>
                          </div>
                        </div>
                    {% endfor %}
                  {% when 'color_circles_rtext' %}
                    <div class="option-block color-circles color-circles-right">
                      <label>{{ block.settings.label }}</label>
                      <div class="color-circle-list">
                        {% assign option_color = product.options_with_values | where: 'name', "color" %}
                        {% for option in option_color %}
                          {% if option.values.size > 0 %}
                            {% for color in option.values %}
                              <label class="color-circle-item" title="{{ color }}">
                                <input
                                  type="radio"
                                  name="option_color"
                                  value="{{ color }}"
                                  class="color-radio"
                                >
                                <span class="circle custom_color_{{ color | strip | escape | downcase | replace: ' ', '_'   }}"></span>
                                <span class="label">{{ color }}</span>
                              </label>
                            {% endfor %}
                          {% else %}
                            <p style="color:red">⚠️ Color option not found or has no values.</p>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </div>
                  {% when 'color_circles_btext' %}
                    <div class="option-block color-circles">
                      <label>{{ block.settings.label }}</label>
                      <div class="color-circle-list">
                        {% assign option_color = product.options_with_values | where: 'name', "color" %}
                        {% for option in option_color %}
                          {% if option.values.size > 0 %}
                            {% for color in option.values %}
                              <label class="color-circle-item" title="{{ color }}">
                                <input
                                  type="radio"
                                  name="option_color"
                                  value="{{ color }}"
                                  class="color-radio"
                                >
                                <span class="circle custom_color_{{ color | strip | escape | downcase | replace: ' ', '_'   }}"></span>
                                <span class="label">{{ color }}</span>
                              </label>
                            {% endfor %}
                          {% else %}
                            <p style="color:red">⚠️ Color option not found or has no values.</p>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </div>
                  {% when 'color_circles_btext_active' %}
                    <div class="option-block color-circles color-circles-active">
                      <label>{{ block.settings.label }}</label>
                      <div class="color-circle-list">
                        {% assign option_color = product.options_with_values | where: 'name', "color" %}
                        {% for option in option_color %}
                          {% if option.values.size > 0 %}
                            {% for color in option.values %}
                              <label class="color-circle-item" title="{{ color }}">
                                <input
                                  type="radio"
                                  name="option_color"
                                  value="{{ color }}"
                                  class="color-radio"
                                >
                                <span class="circle custom_color_{{ color | strip | escape | downcase | replace: ' ', '_'   }}"></span>
                                <span class="label">{{ color }}</span>
                              </label>
                            {% endfor %}
                          {% else %}
                            <p style="color:red">⚠️ Color option not found or has no values.</p>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </div>
                  {% when 'color_circles_lbtext' %}
                    <div class="option-block color-circles color-circles-active">
                      <label>{{ block.settings.label }}: <span class="active-color"></span></label>
                      <div class="color-circle-list">
                        {% assign option_color = product.options_with_values | where: 'name', "color" %}
                        {% for option in option_color %}
                          {% if option.values.size > 0 %}
                            {% for color in option.values %}
                              <label class="color-circle-item" title="{{ color }}">
                                <input
                                  type="radio"
                                  name="option_color"
                                  value="{{ color }}"
                                  class="color-radio"
                                  data-label="{{ color }}"
                                >
                                <span class="circle custom_color_{{ color | strip | escape | downcase | replace: ' ', '_'   }}"></span>
                              </label>
                            {% endfor %}
                          {% else %}
                            <p style="color:red">⚠️ Color option not found or has no values.</p>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </div>
                 {% endcase %}
            {% endif %}
                {% when 'size' %}
                    {% assign size_option = product.options_with_values | where: 'name', 'size' | first %}
                    {% if size_option != blank %}
                            <div class="option-block size-buttons">
                    <label>{{ block.settings.label }}</label>
                    <div class="size-button-list">
                    
            
                        {% for size in size_option.values %}
                          <div class="size-button" data-size="{{ size }}">{{ size }}</div>
                        {% endfor %}
                     
                    </div>
                  </div>
                {% endif %}

                {% else %}
                  {% assign opt = product.options_with_values[1].name %}   
                  {% if opt != blank %}
                    {% for option in product.options_with_values %}
                      {% assign name_op = option.name | downcase %}       
                      {% if name_op != 'color' and name_op != 'size' %}
                        <div class="option-group custom-variant-select">
                          <label>{{ name_op}}</label>
                          <div class="custom-select" tabindex="0">
                            <div class="select-trigger">Select option </div>
                            <div class="select-options">
                                {% for velue in option.values %}
                                <div class="option-value" data-value="{{ velue.name }}" data-option-name="{{ option.name }}">
                                  {{ velue.name }}
                                </div>
                               {% endfor %}
                            </div>
                          </div>
                        </div>
                      {% endif %}
                    {% endfor %}
                    {% endif %}
            
                {% endcase %}
              {% endfor %}
            </custom-variant>
            </div>
        
  {% endcase %}
         
 {% endfor %}
     </div>
  </div>
</div>
 
<script type="application/json" id="json_prod_var">{{ product.variants | json }}</script>
<script type="application/json" id="json_prod_options">{{ product.options_with_values | json }}</script>
  
{% schema %}
{
  "name": "Product Block",
  "settings": [
    {
      "type": "header",
      "content": "General Settings"
    },
    { 
      "type": "select", 
      "id": "heading_size", 
      "label": "Heading Size", 
      "options": [{ "value": "small", "label": "Small" }, { "value": "medium", "label": "Medium" }, { "value": "large", "label": "Large" }], 
      "default": "medium" 
    },
    {
      "type": "select", 
      "id": "headline_typography", 
      "label": "Headline Typography", 
      "options": [
        { "value": "uppercase", "label": "AA" }, 
        { "value": "capitalize", "label": "Aa" }, 
        { "value": "lowercase", "label": "aa" }
      ], 
      "default": "capitalize" 
    },
    {
      "type": "color", 
      "id": "text_color", 
      "label": "Title Color", 
      "default": "#000000" 
    },    
    { 
      "type": "select", 
      "id": "heading_align", 
      "label": "Heading Alignment", 
      "options": [
        { "value": "left", "label": "Left" }, 
        { "value": "center", "label": "Center" }, 
        { "value": "right", "label": "Right" }
      ], 
      "default": "center" 
    }, 
    { 
      "type": "color", 
      "id": "background_color", 
      "label": "Background color", 
      "default": "transparent" 
    },
    { 
      "type": "select", 
      "id": "font_variant", 
      "label": "Font Family", 
      "options": [
        { "value": "default", "label": "Default by theme" }, 
        { "value": "custom", "label": "Own choice" }
      ], 
      "default": "default" 
    },
    { 
      "type": "font_picker", 
      "label": "Regular Font", 
      "id": "title_font", 
      "default": "montserrat_n4" 
    },
   
    { 
      "type": "select", 
      "id": "section_width", 
      "label": "Section Width", 
      "options": [
        { "value": "full", "label": "Full Width" }, 
        { "value": "contained", "label": "Contained" }
      ], 
      "default": "contained" 
    },
    { 
      "type": "range", 
      "id": "padding_x_desk", 
      "label": "Horizontal Padding", 
      "info": "for desktop", 
      "min": 0, 
      "max": 100, 
      "step": 5, 
      "default": 70 
    },
    { 
      "type": "range", 
      "id": "padding_y_desk", 
      "label": "Vertical Padding", 
      "info": "for desktop", 
      "min": 0, 
      "max": 100, 
      "default": 10 
    },
    { 
      "type": "range", 
      "id": "padding_x_mob", 
      "label": "Horizontal Padding", 
      "info": "for mobile", 
      "min": 0, 
      "max": 100, 
      "step": 5, 
      "default": 15 
    },
    { 
      "type": "range", 
      "id": "padding_y_mob", 
      "label": "Vertical Padding", 
      "info": "for mobile", 
      "min": 0, 
      "max": 50, 
      "default": 7 
    },
    { 
      "type": "select", 
      "id": "display_on", 
      "label": "Display On", 
      "options": [
        { "value": "all", "label": "All Devices" }, 
        { "value": "mobile_only", "label": "Mobile Only" }, 
        { "value": "desktop_only", "label": "Desktop Only" }
      ], 
      "default": "all" 
    },
 {
          "type": "product",
          "id": "product",
          "label": "Product"        },
       
 
    {
      "type": "richtext",
      "id": "uppertitle",
      "label": "Uppertitle",
      "default": "<h3>Reviewed by +100 Happy Customers </h3>"
    }
  ],
  "blocks": [
    {
      "type": "price",
      "name": "price",
      "settings": [
    
        
        {
          "type": "text",
          "id": "instock_text",
          "label": "In Stock Text",
          "default": "In Stock."
        },
         {
          "type": "text",
          "id": "outstock_text",
          "label": "Out Stock Text",
          "default": "Sorry, but Product Out Of Stock now."
        },
        {
          "type": "color",
          "id": "intstock_color",
          "label": "In Stock Color"
        },
        {
          "type": "color",
          "id": "outstock_color",
          "label": "Out Stock Color"
        }
      ]
    },
     {
      "type": "description",
      "name": "description",
    
     "settings": [
    {
      "type": "color", 
      "id": "text_color", 
      "label": "Text Color", 
      "default": "#000000" 
    },
       
      ]
    },   {
      "type": "points",
      "name": "points",
    
     "settings": [
   
    
    {
      "type": "header",
      "content": "Icons Settings"
    },
    {
      "type": "image_picker",
      "id": "icon_1",
      "label": "Icon Image For Point 1"
    },
    {
      "type": "text",
      "id": "icon_1_text",
      "label": "Icon Symbol For Point 1"
    },
    {
      "type": "text",
      "id": "point_1_text",
      "label": "Text For Point 1",
      "default": "Perfect for gym, yoga & sunday strolls"
    },
    {
      "type": "image_picker",
      "id": "icon_2",
      "label": "Icon Image For Point 2"
    },
    {
      "type": "text",
      "id": "icon_2_text",
      "label": "Icon Symbol For Point 2"
    },
    {
      "type": "text",
      "id": "point_2_text",
      "label": "Text for Point 2",
      "default": "Perfect for gym, yoga & sunday strolls"
    },
    {
      "type": "image_picker",
      "id": "icon_3",
      "label": "Icon Image For Point 3"
    },
    {
      "type": "text",
      "id": "icon_3_text",
      "label": "Icon Symbol For Point 3"
    },
    {
      "type": "text",
      "id": "point_3_text",
      "label": "Text For Point 3",
      "default": "Perfect for gym, yoga & sunday strolls"
    }
    ,
    {
      "type": "color",
      "id": "color",
      "label": "Font color",
      "default": "#000"
    }
       
      ]
    },

  {
      "type": "trust-icons",
      "name": "trust-icons",
    
     "settings": [
     {
      "type": "color",
      "id": "background_item",
      "label": "Background Item Color",
       "default": "#d9d9d9"
    },
     {
      "type": "color",
      "id": "icon_item",
      "label": "Icon Item Color",
       "default": "#fff"
    },   {
      "type": "select",
      "id": "txt_align",
      "label": "Text Position",
       "options": [
            {
              "value": "bottom",
              "label": "Bottom"
            },
            {
              "value": "right",
              "label": "Right"
            }],
       "default": "bottom"
    },
         {
      "type": "header",
      "content": "Icon1"
    },
          {
          "type": "select",
          "id": "icon_type1",
          "label": "Icon Type",
          "options": [
            {
              "value": "image",
              "label": "Image"
            },
            {
              "value": "google_icon",
              "label": "Google Material Icon"
            },
            {
              "value": "symbol",
              "label": "Symbol/Emoji"
            }
          ],
          "default": "google_icon"
        },
        {
          "type": "image_picker",
          "id": "icon_image1",
          "label": "Icon Image",
          "info": "Used if Icon Type is set to Image. Recommended size: 60x60px."
        },
        {
          "type": "text",
          "id": "google_icon_name1",
          "label": "Google Material Icon Name",
          "info": "Used if Icon Type is set to Google Material Icon. Example: 'science'. See https://fonts.google.com/icons for names.",
          "default": "science"
        },
        {
          "type": "text",
          "id": "icon_symbol1",
          "label": "Symbol/Emoji",
          "info": "Used if Icon Type is set to Symbol/Emoji. Example: '🔬'.",
          "default": "🔬"
        },
        {
          "type": "richtext",
          "id": "text1",
          "label": "Text",
          "default": "<p><strong>Lab Tested</strong><br>For Safety</p>"
        },
         {
      "type": "header",
      "content": "Icon2"
    },
          {
          "type": "select",
          "id": "icon_type2",
          "label": "Icon Type",
          "options": [
            {
              "value": "image",
              "label": "Image"
            },
            {
              "value": "google_icon",
              "label": "Google Material Icon"
            },
            {
              "value": "symbol",
              "label": "Symbol/Emoji"
            }
          ],
          "default": "google_icon"
        },
        {
          "type": "image_picker",
          "id": "icon_image2",
          "label": "Icon Image",
          "info": "Used if Icon Type is set to Image. Recommended size: 60x60px."
        },
        {
          "type": "text",
          "id": "google_icon_name2",
          "label": "Google Material Icon Name",
          "info": "Used if Icon Type is set to Google Material Icon. Example: 'science'. See https://fonts.google.com/icons for names.",
          "default": "science"
        },
        {
          "type": "text",
          "id": "icon_symbol2",
          "label": "Symbol/Emoji",
          "info": "Used if Icon Type is set to Symbol/Emoji. Example: '🔬'.",
          "default": "🔬"
        },
        {
          "type": "richtext",
          "id": "text2",
          "label": "Text",
          "default": "<p><strong>Lab Tested</strong><br>For Safety</p>"
        },
          {
      "type": "header",
      "content": "Icon3"
    },
          {
          "type": "select",
          "id": "icon_type3",
          "label": "Icon Type",
          "options": [
            {
              "value": "image",
              "label": "Image"
            },
            {
              "value": "google_icon",
              "label": "Google Material Icon"
            },
            {
              "value": "symbol",
              "label": "Symbol/Emoji"
            }
          ],
          "default": "google_icon"
        },
        {
          "type": "image_picker",
          "id": "icon_image3",
          "label": "Icon Image",
          "info": "Used if Icon Type is set to Image. Recommended size: 60x60px."
        },
        {
          "type": "text",
          "id": "google_icon_name3",
          "label": "Google Material Icon Name",
          "info": "Used if Icon Type is set to Google Material Icon. Example: 'science'. See https://fonts.google.com/icons for names.",
          "default": "science"
        },
        {
          "type": "text",
          "id": "icon_symbol3",
          "label": "Symbol/Emoji",
          "info": "Used if Icon Type is set to Symbol/Emoji. Example: '🔬'.",
          "default": "🔬"
        },
        {
          "type": "richtext",
          "id": "text3",
          "label": "Text",
          "default": "<p><strong>Lab Tested</strong><br>For Safety</p>"
        },
      ]
    }, 
  

  {
      "type": "addon",
      "name": "addon",
    
     "settings": [
     
   {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Addon"
    },
        {
        "type": "header",
          "content": "Cards Settings"
        },
        { "type": "select", "id": "container_styling", "label": "Container Styling", "options": [{ "value": "no_card", "label": "No Card" }, { "value": "card", "label": "Card" }, { "value": "shadow", "label": "Shadow" }], "default": "card" },
        {
          "type": "range",
          "id": "box_shadow_offset",
          "label": "Box shadow offset",  
          "min": -10,
          "max": 10,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_blur",
          "label": "Box shadow blur",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_spread",
          "label": "Box shadow spread",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        { "type": "color", "id": "box_shadow_color", "label": "Box shadow color", "default": "#000000" },   
        {
          "type": "range",
          "id": "card_border",
          "label": "Card border",
          "info": "Container Styling Card",
          "min": 0,
          "max": 5,
          "step": 1,
          "default": 1
        },
        { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#000" },
        { "type": "range", "id": "container_radius", "label": "Container Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 },
    {
      "type": "range",
      "id": "padding_x_desk",
      "label": "Horizontal Padding",
      "info": "for desktop",
      "min": 0,
      "max": 200,
      "step": 5,
      "default": 20
    },
       {
      "type": "range",
      "id": "padding_y_desk",
      "label": "Vertical Padding",
      "info": "for desktop",   
      "min": 0,
      "max": 100,
            "step": 5,
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_x_mob",
      "label": "Horizontal Padding",
      "info": "for mobile",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_y_mob",
      "label": "Vertical Padding",
      "info": "for mobile",   
      "min": 0,
      "max": 100,
      "default": 0
    },  
             {
      "type": "header",
      "content": "Product 1"
    },
      {
          "type": "product",
          "id": "product1",
          "label": "Select addon product 1"
        },
        {
          "type": "text",
          "id": "custom_title1",
          "label": "Custom title 1 (optional)"
        },
            {
      "type": "header",
      "content": "Product 2"
    },
      {
          "type": "product",
          "id": "product2",
          "label": "Select addon product 2"
        },
        {
          "type": "text",
          "id": "custom_title2",
          "label": "Custom title 2 (optional)"
        },
            {
      "type": "header",
      "content": "Product 3"
    },
      {
          "type": "product",
          "id": "product3",
          "label": "Select addon product 3"
        },
        {
          "type": "text",
          "id": "custom_title3",
          "label": "Custom title 3 (optional)"
        }
     
     
     
     ]
    }, 
  
  {
      "type": "gifts",
      "name": "gifts",
    
     "settings": [

    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Unlock Gifts"
    },
    {
      "type": "image_picker",
      "id": "lock_image",
      "label": "Lock Image",
      "info": "Used for locked gifts. Recommended size: 100x100px."
    },
        {
        "type": "header",
          "content": "Cards Settings"
        },
        { "type": "select", "id": "container_styling", "label": "Container Styling", "options": [{ "value": "no_card", "label": "No Card" }, { "value": "card", "label": "Card" }, { "value": "shadow", "label": "Shadow" }], "default": "card" },
        {
          "type": "range",
          "id": "box_shadow_offset",
          "label": "Box shadow offset",  
          "min": -10,
          "max": 10,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_blur",
          "label": "Box shadow blur",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_spread",
          "label": "Box shadow spread",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        { "type": "color", "id": "box_shadow_color", "label": "Box shadow color", "default": "#000000" },   
        {
          "type": "range",
          "id": "card_border",
          "label": "Card border",
          "info": "Container Styling Card",
          "min": 0,
          "max": 5,
          "step": 1,
          "default": 1
        },
        { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#000" },
        { "type": "range", "id": "container_radius", "label": "Container Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 },
        {
        "type": "header",
          "content": "Gift 1"
        },
        {
          "type": "image_picker",
          "id": "gift_image1",
          "label": "Gift Image",
          "info": "Used when gift is unlocked. Recommended size: 100x100px."
        },
        {
          "type": "text",
          "id": "gift_title1",
          "label": "Gift Title",
          "default": "Gift"
        },
          {
          "type": "product",
          "id": "gift_product1",
          "label": "Gift Product",
        },
        {
          "type": "number",
          "id": "gift_summ1",
          "label": "Gift Rule Summ",
        },
        {
          "type": "number",
          "id": "gift_qty1",
          "label": "Gift Rule Quaantity",
        },
        {
          "type": "radio",
          "id": "gift_area1",
          "label": "Local / Global area",
          "options": [
            { "value": "local", "label": "Local" },
            { "value": "global", "label": "Global" }
          ],
          "default": "local"
        },
        {
          "type": "radio",
          "id": "gift_rulle_option1",
          "label": "Gift rulle open",
          "options": [
            { "value": "price", "label": "price" },
            { "value": "quntity", "label": "quntity" }
          ],
          "default": "quntity"
        },
        {
        "type": "header",
          "content": "Gift 2"
        },
        {
          "type": "image_picker",
          "id": "gift_image2",
          "label": "Gift Image",
          "info": "Used when gift is unlocked. Recommended size: 100x100px."
        },
        {
          "type": "text",
          "id": "gift_title2",
          "label": "Gift Title",
          "default": "Gift"
        },
          {
          "type": "product",
          "id": "gift_product2",
          "label": "Gift Product",
        },
        {
          "type": "number",
          "id": "gift_summ2",
          "label": "Gift Rule Summ",
        },
        {
          "type": "number",
          "id": "gift_qty2",
          "label": "Gift Rule Quaantity",
        },
        {
          "type": "radio",
          "id": "gift_area2",
          "label": "Local / Global area",
          "options": [
            { "value": "local", "label": "Local" },
            { "value": "global", "label": "Global" }
          ],
          "default": "local"
        },
        {
          "type": "radio",
          "id": "gift_rulle_option2",
          "label": "Gift rulle open",
          "options": [
            { "value": "price", "label": "price" },
            { "value": "quntity", "label": "quntity" }
          ],
          "default": "quntity"
        },
        {
        "type": "header",
          "content": "Gift 3"
        },
        {
          "type": "image_picker",
          "id": "gift_image3",
          "label": "Gift Image",
          "info": "Used when gift is unlocked. Recommended size: 100x100px."
        },
        {
          "type": "text",
          "id": "gift_title3",
          "label": "Gift Title",
          "default": "Gift"
        },
          {
          "type": "product",
          "id": "gift_product3",
          "label": "Gift Product",
        },
        {
          "type": "number",
          "id": "gift_summ3",
          "label": "Gift Rule Summ",
        },
        {
          "type": "number",
          "id": "gift_qty3",
          "label": "Gift Rule Quaantity",
        },
        {
          "type": "radio",
          "id": "gift_area3",
          "label": "Local / Global area",
          "options": [
            { "value": "local", "label": "Local" },
            { "value": "global", "label": "Global" }
          ],
          "default": "local"
        },
        {
          "type": "radio",
          "id": "gift_rulle_option3",
          "label": "Gift rulle open",
          "options": [
            { "value": "price", "label": "price" },
            { "value": "quntity", "label": "quntity" }
          ],
          "default": "quntity"
        },
       
     ]
    }, 
    {
      "type": "size",
      "name": "size",
    
     "settings": [
    
    {
      "type": "header",
      "content": "Settings"
    },
       {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
     {
      "type": "select",
      "id": "title_size",
      "label": "Title Size",
      "options": [
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "medium"
    },
    {
      "type": "select",
      "id": "title_format",
      "label": "Headline Typography",
      "options": [
        { "value": "uppercase", "label": "AA" },
        { "value": "capitalize", "label": "Aa" },
        { "value": "lowercase", "label": "aa" }
      ],
      "default": "uppercase"
    },
     {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#000000"
    },
    {
      "type": "image_picker",
      "id": "icon_1",
      "label": "Icon Image"
    },
    {
      "type": "text",
      "id": "icon_1_text",
      "label": "Icon Symbol"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Size Chart Text",
      "default": "Size Chart."
    },
     {
      "type": "image_picker",
      "id": "image",
      "label": "Size Chart Image"
    }
    
       
     ]
    },
    {
      "type": "add",
      "name": "add",
    
     "settings": [
    {
      "type": "checkbox",
      "id": "show_payment_icons",
      "label": "Show payment icons",
      "default": true
    },
   
    {
       "type": "select",
         "id": "qty_align",
            "label": "Quantity Selector Alignment",
      "options":[ {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "right",
              "label": "Right"
            }],
   
      "default": "left"
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    { "type": "range", "id": "button_radius", "label": "Button Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 },
    { "type": "color", "id": "button_color", "label": "Button background", "default": "#000000" },
    { "type": "color", "id": "button_text_color", "label": "Button Text Color", "default": "#ffffff" },
    {
      "type": "header",
      "content": "Icons Add Button"
    },
    {
      "type": "image_picker",
      "id": "icon",
      "label": "Icon"
    },
    {
      "type": "text",
      "id": "icon_alt",
      "label": "Google Icon or Class (Icon)",
      "default": "shopping_bag"
    }
    
     
     ]},

  {
      "type": "timeline",
      "name": "timeline",
    
     "settings": [
{
 
    
      "type": "header",
      "content": "Icons"
    },
    {
      "type": "image_picker",
      "id": "icon_1",
      "label": "Icon 1"
    },
    {
      "type": "text",
      "id": "icon_1_alt",
      "label": "Google Icon or Class (Icon 1)",
      "default": "Icon 1"
    },
    {
      "type": "image_picker",
      "id": "icon_2",
      "label": "Icon 2"
    },
    {
      "type": "text",
      "id": "icon_2_alt",
      "label": "Google Icon or Class (Icon 2)",
      "default": "Icon 2"
    },
    {
      "type": "image_picker",
      "id": "icon_3",
      "label": "Icon 3"
    },
    {
      "type": "text",
      "id": "icon_3_alt",
      "label": "Google Icon or Class (Icon 3)",
      "default": "Icon 3"
    },
    {
      "type": "text",
      "id": "text_1",
      "label": "Text Under Icon 1",
      "default": "Lab Tested\nFor Safety"
    },
    {
      "type": "text",
      "id": "text_2",
      "label": "Text Under Icon 2",
      "default": "Lab Tested\nFor Safety"
    },
    {
      "type": "text",
      "id": "text_3",
      "label": "Text Under Icon 3",
      "default": "Lab Tested\nFor Safety"
    },
    {
      "type": "color",
      "id": "stroke_item",
      "label": "Stroke Item Color",
       "default": "#c4c4c4"
    },
     {
      "type": "color",
      "id": "background_item",
      "label": "Background Item Color",
       "default": "#d9d9d9"
    },
     {
      "type": "color",
      "id": "icon_item",
      "label": "Icon Item Color",
       "default": "#fff"
    },
    {
  "type": "checkbox",
  "id": "delivery_timeline_enabled",
  "label": "Enable Delivery Timeline Mode",
  "default": false
},
{
  "type": "range",
  "id": "days_to_step_2",
  "label": "Days Until Step 2",
  "min": 1,
  "max": 10,
  "step": 1,
  "default": 2
},
{
  "type": "range",
  "id": "days_to_step_3",
  "label": "Days Until Step 3",
  "min": 2,
  "max": 14,
  "step": 1,
  "default": 4
},
    {
  "type": "text",
  "id": "step_1_label",
  "label": "Step 1 Label (Timeline Mode)",
  "default": "Order Received"
},
{
  "type": "text",
  "id": "step_2_label",
  "label": "Step 2 Label (Timeline Mode)",
  "default": "Processing"
},
{
  "type": "text",
  "id": "step_3_label",
  "label": "Step 3 Label (Timeline Mode)",
  "default": "Estimated Delivery"
}

       
     ]
  },
  {
      "type": "media",
      "name": "Media Gallery",
      "settings": [
        {
          "type": "image_picker",
          "id": "main_image",
          "label": "Main Image (Optional)",
          "info": "Leave blank to use the product's featured image."
        }
      ]
  },
  {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "select",
          "id": "video_type",
          "label": "Video Type",
          "options": [
            {
              "value": "file",
              "label": "Upload Video File"
            },
            {
              "value": "youtube",
              "label": "YouTube Link"
            }
          ],
          "default": "file"
        },
        {
          "type": "video",
          "id": "video_file",
          "label": "Video File",
          "info": "Upload a video file (MP4 recommended). Used when Video Type is 'Upload Video File'."
        },
        {
          "type": "url",
          "id": "youtube_url",
          "label": "YouTube URL",
          "info": "Enter a YouTube video URL (e.g., https://www.youtube.com/watch?v=VIDEO_ID). Used when Video Type is 'YouTube Link'."
        }
      ]
  },
  {
      "type": "testimonial",
      "name": "Testimonial Card",
      "settings": [
          {
            "type": "textarea",
            "id": "testimonial",
            "label": "Testimonial Text",
            "default": "Have been buying these for years !! Really like the bigger size of the Gummies now ! Appreciate it Joe V. 🙌"
          },
          {
            "type": "image_picker",
            "id": "photo",
            "label": "Customer Photo"
          },
          {
            "type": "text",
            "id": "name",
            "label": "Customer Name",
            "default": "Michael"
          },
          {
            "type": "checkbox",
            "id": "verified",
            "label": "Verified Buyer",
            "default": true
          },
          {
            "type": "range",
            "id": "rating",
            "label": "Star Rating (0–5)",
            "min": 0,
            "max": 5,
            "step": 1,
            "default": 4
          },
          {
            "type": "header",
            "content": "Cards Settings"
          },
          { "type": "select", "id": "container_styling", "label": "Container Styling", "options": [{ "value": "no_card", "label": "No Card" }, { "value": "card", "label": "Card" }, { "value": "shadow", "label": "Shadow" }], "default": "card" },
          {
            "type": "range",
            "id": "box_shadow_offset",
            "label": "Box shadow offset",  
            "min": -10,
            "max": 10,
            "default": 1
          },
          {
            "type": "range",
            "id": "box_shadow_blur",
            "label": "Box shadow blur",  
            "min": 0,
            "max": 15,
            "default": 1
          },
          {
            "type": "range",
            "id": "box_shadow_spread",
            "label": "Box shadow spread",  
            "min": 0,
            "max": 15,
            "default": 1
          },
          { "type": "color", "id": "box_shadow_color", "label": "Box shadow color", "default": "#000000" },   
          {
            "type": "range",
            "id": "card_border",
            "label": "Card border",
            "info": "Container Styling Card",
            "min": 0,
            "max": 5,
            "step": 1,
            "default": 1
          },
          { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#000" },
          { "type": "range", "id": "container_radius", "label": "Container Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 }
      ]
  },
  {
      "type": "square_icon",
      "name": "Square Icon Grid",
      "settings": [
        {
          "type": "header",
          "content": "Icons"
        },
        {
          "type": "image_picker",
          "id": "icon_1",
          "label": "Icon 1"
        },
        {
          "type": "text",
          "id": "icon_1_alt",
          "label": "Google Icon or Class (Icon 1)",
          "default": "icon 1"
        },
        {
          "type": "image_picker",
          "id": "icon_2",
          "label": "Icon 2"
        },
        {
          "type": "text",
          "id": "icon_2_alt",
          "label": "Google Icon or Class (Icon 2)",
          "default": "icon 2"
        },
        {
          "type": "image_picker",
          "id": "icon_3",
          "label": "Icon 3"
        },
        {
          "type": "text",
          "id": "icon_3_alt",
          "label": "Google Icon or Class (Icon 3)",
          "default": "icon 3"
        },
        {
          "type": "image_picker",
          "id": "icon_4",
          "label": "Icon 4"
        },
        {
          "type": "text",
          "id": "icon_4_alt",
          "label": "Google Icon or Class (Icon 4)",
          "default": "icon 4"
        },
        {
          "type": "text",
          "id": "text_1",
          "label": "Text Under Icon 1",
          "default": "Lab Tested\nFor Safety"
        },
        {
          "type": "text",
          "id": "text_2",
          "label": "Text Under Icon 2",
          "default": "Lab Tested\nFor Safety"
        },
        {
          "type": "text",
          "id": "text_3",
          "label": "Text Under Icon 3",
          "default": "Lab Tested\nFor Safety"
        },
        {
          "type": "text",
          "id": "text_4",
          "label": "Text Under Icon 4",
          "default": "Lab Tested\nFor Safety"
        },
        {
          "type": "header",
          "content": "mobile settings"
        },
        {
          "type": "text",
          "id": "text_title_mob",
          "label": "Text title first block",
          "default": "Lab Tested For Safety"
        },
        {
          "type": "text",
          "id": "text_mob",
          "label": "Text first block",
          "default": "Some kind of description text could go here over two lines"
        },
        {
          "type": "color",
          "id": "stroke_item",
          "label": "Stroke Item Color",
           "default": "#c4c4c4"
        },
         {
          "type": "color",
          "id": "background_item",
          "label": "Background Item Color",
           "default": "#d9d9d9"
        },
         {
          "type": "color",
          "id": "icon_item",
          "label": "Icon Item Color",
           "default": "#fff"
        },
      ]
  },
  {
      "type": "pack_options",
      "name": "Pack Options",
      "settings": [
        {
        "type": "header",
          "content": "Cards Settings"
        },
        { "type": "select", "id": "container_styling", "label": "Container Styling", "options": [{ "value": "no_card", "label": "No Card" }, { "value": "card", "label": "Card" }, { "value": "shadow", "label": "Shadow" }], "default": "card" },
        {
          "type": "range",
          "id": "box_shadow_offset",
          "label": "Box shadow offset",  
          "min": -10,
          "max": 10,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_blur",
          "label": "Box shadow blur",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        {
          "type": "range",
          "id": "box_shadow_spread",
          "label": "Box shadow spread",  
          "min": 0,
          "max": 15,
          "default": 1
        },
        { "type": "color", "id": "box_shadow_color", "label": "Box shadow color", "default": "#000000" },   
        {
          "type": "range",
          "id": "card_border",
          "label": "Card border",
          "info": "Container Styling Card",
          "min": 0,
          "max": 5,
          "step": 1,
          "default": 1
        },
        { "type": "color", "id": "card_border_color", "label": "Card border color", "default": "#000" },
        { "type": "range", "id": "container_radius", "label": "Container Corner Radius", "min": 0, "max": 50, "step": 5, "default": 10 },
        { "type": "color", "id": "pack_shipping_bg", "label": "Pack Shipping Background", "default": "#c4c4c4" },
        { "type": "color", "id": "pack_shipping_txt", "label": "Pack Shipping Text ", "default": "#000" },
        { "type": "color", "id": "card_border_color_active", "label": "Card border color active", "default": "#3eed53" },
        {
          "type": "color", 
          "id": "discount_color", 
          "label": "Discount Label Color", 
          "default": "#fff" 
        },
        {
          "type": "color", 
          "id": "discount_color_bg", 
          "label": "Discount Label Color Bg", 
          "default": "#000000" 
        },
        {
          "type": "color", 
          "id": "price_color", 
          "label": "Price Label Color", 
          "default": "#fff" 
        },
        {
          "type": "color", 
          "id": "price_color_bg", 
          "label": "Price Label Color Bg", 
          "default": "#000000" 
        },
        {
          "type": "image_picker",
          "id": "pack_image",
          "label": "Pack Image",
          "info": "Recommended size: 200x200px"
        },
        {
          "type": "text",
          "id": "pack_title",
          "label": "Pack Title",
          "default": "1 Pack"
        },
        {
          "type": "text",
          "id": "pack_quantity_text",
          "label": "Pack Quantity text",
          "default": "1 Pack"
        },
        {
          "type": "number",
          "id": "pack_quantity",
          "label": "Pack Quantity",
          "default": 1
        },
        {
          "type": "text",
          "id": "discount_label",
          "label": "Discount Label",
          "info": "Leave blank to hide. Example: 'Most Popular', 'Best Value'"
        },
        {
          "type": "text",
          "id": "pack_shipping",
          "label": "Pack Shipping",
          "default": "Paid shipping"
        },
        {
          "type": "image_picker",
          "id": "pack_image_2",
          "label": "Pack Image 2",
          "info": "Recommended size: 200x200px"
        },
        {
          "type": "text",
          "id": "pack_title_2",
          "label": "Pack Title 2",
          "default": "1 Pack"
        },
        {
          "type": "text",
          "id": "pack_quantity_text_2",
          "label": "Pack Quantity text 2",
          "default": "1 Pack"
        },
        {
          "type": "number",
          "id": "pack_quantity_2",
          "label": "Pack Quantity 2",
          "default": 1
        },
        {
          "type": "text",
          "id": "discount_label_2",
          "label": "Discount Label 2",
          "info": "Leave blank to hide. Example: 'Most Popular', 'Best Value'"
        },
        {
          "type": "text",
          "id": "pack_shipping_2",
          "label": "Pack Shipping 2",
          "default": "Paid shipping"
        },
        {
          "type": "image_picker",
          "id": "pack_image_3",
          "label": "Pack Image 3",
          "info": "Recommended size: 200x200px"
        },
        {
          "type": "text",
          "id": "pack_title_3",
          "label": "Pack Title 3",
          "default": "1 Pack"
        },
        {
          "type": "text",
          "id": "pack_quantity_text_3",
          "label": "Pack Quantity text 3",
          "default": "1 Pack"
        },
        {
          "type": "number",
          "id": "pack_quantity_3",
          "label": "Pack Quantity 3",
          "default": 1
        },
        {
          "type": "text",
          "id": "discount_label_3",
          "label": "Discount Label 3",
          "info": "Leave blank to hide. Example: 'Most Popular', 'Best Value'"
        },
        {
          "type": "text",
          "id": "pack_shipping_3",
          "label": "Pack Shipping 3",
          "default": "Paid shipping"
        },
      ]
  },
  {
      "type": "accordion",
      "name": "Accordion",
      "settings": [
        {
          "type": "text",
          "id": "title_1",
          "label": "Accordion Title 1",
          "default": "test 1"
        },
        {
          "type": "textarea",
          "id": "content_1",
          "label": "Accordion Content 1",
          "default": "test 1"
        },
        {
          "type": "text",
          "id": "title_2",
          "label": "Accordion Title 2",
          "default": "test 2"
        },
        {
          "type": "textarea",
          "id": "content_2",
          "label": "Accordion Content 2",
          "default": "test 2"
        },
        {
          "type": "text",
          "id": "title_3",
          "label": "Accordion Title 3",
          "default": "test 3"
        },
        {
          "type": "textarea",
          "id": "content_3",
          "label": "Accordion Content 3",
          "default": "test 3"
        },
        {
          "type": "text",
          "id": "title_4",
          "label": "Accordion Title 4",
        },
        {
          "type": "textarea",
          "id": "content_4",
          "label": "Accordion Content 4",
        },
        {
          "type": "text",
          "id": "title_5",
          "label": "Accordion Title 5",
        },
        {
          "type": "textarea",
          "id": "content_5",
          "label": "Accordion Content 5",
        },
        {
          "type": "text",
          "id": "title_6",
          "label": "Accordion Title 6",
        },
        {
          "type": "textarea",
          "id": "content_6",
          "label": "Accordion Content 6",
        },
        {
          "type": "text",
          "id": "title_7",
          "label": "Accordion Title 7",
        },
        {
          "type": "textarea",
          "id": "content_7",
          "label": "Accordion Content 7",
        },
        {
          "type": "text",
          "id": "title_8",
          "label": "Accordion Title 8",
        },
        {
          "type": "textarea",
          "id": "content_8",
          "label": "Accordion Content 8",
        },
        {
          "type": "text",
          "id": "title_9",
          "label": "Accordion Title 9",
        },
        {
          "type": "textarea",
          "id": "content_9",
          "label": "Accordion Content 9",
        },
        {
          "type": "text",
          "id": "title_10",
          "label": "Accordion Title 10",
        },
        {
          "type": "textarea",
          "id": "content_10",
          "label": "Accordion Content 10",
        }
      ]
  },
  {
      "type": "option",
      "name": "Product Option Selector",
      "settings": [
        {
          "type": "header",
          "content": "Color option"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Choose a color"
        },
        {
          "type": "select",
          "id": "color_style",
          "label": "Color style option",
          "options": [
            {
              "value": "drop_color_d",
              "label": "Drop down variant option default"
            },
            {
              "value": "drop_color_c",
              "label": "Drop down variant option with image/colour"
            },
            {
              "value": "color_circles_rtext",
              "label": "Color Circles text right",
            },
            {
              "value": "color_circles_btext",
              "label": "Color Circles text bottom",
            },
            {
              "value": "color_circles_btext_active",
              "label": "Color Circles text bottom only active",
            },
            {
              "value": "color_circles_lbtext",
              "label": "Color Circles text only label",
            },
          ],
          "default": "drop_color_d"
        },
        {
          "type": "header",
          "content": "Size Buttons"
        },
        {
          "type": "text",
          "id": "label_size",
          "label": "Label",
          "default": "Select size"
        },
        {
          "type": "header",
          "content": "Default Dropdown"
        },
        {
          "type": "text",
          "id": "label_defaul",
          "label": "Label",
          "default": "Choose an option",
        }
      ]
  },

   
  ],
  "presets": [
    {
      "name": "Product Block",
      "category": "Custom"
    }
  ]
}
{% endschema %}